<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Ayer中文说明</title>
    <url>/2019/12/03/2019-12-03-Ayer%E4%B8%AD%E6%96%87%E8%AF%B4%E6%98%8E/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="介绍"><span id="介绍">介绍</span></h1><blockquote>
<p><a href="https://github.com/Shen-Yu/hexo-theme-ayer">Ayer</a> 是一个干净且优雅的 Hexo 主题，自带响应式，加载速度很快，该有的功能都有，可配置项很多，非常适合作为你的博客主题，主题内还附送了 6 张精美的高清壁纸。欢迎使用和 Star 支持，如果你在使用过程中有任何疑问或者建议，欢迎联系我！如果你的博客采用了本主题，欢迎在下面评论区留下地址~</p>
</blockquote>
<p><a href="https://github.com/Shen-Yu/hexo-theme-ayer">Ayer</a> 在马来语中是“水”的意思，在西班牙语中是“昨天”的意思。</p>
<p><img src="https://s2.loli.net/2022/03/09/1qjxBFGMdCoAwmV.jpg" alt="hexo-theme-ayer"></p>
<p><a href="https://github.com/Shen-Yu/hexo-theme-ayer">GitHub 地址</a></p>
<p><a href="https://gitee.com/shen-yu/hexo-theme-ayer">国内镜像</a></p>
<p><a href="https://shen-yu.gitee.io/">效果预览</a></p>
<p><a href="https://shen-yu.gitee.io/2019/ayer/">中文说明</a></p>
<span id="more"></span>

<h1 id="特性"><span id="特性">特性</span></h1><ol>
<li>干净且优雅，文章内容美观易读</li>
<li>首页封面全屏平铺，扁平化设计，简洁又不失高大上</li>
<li>响应式设计，博客在桌面端、平板、手机等设备上均能很好的展现</li>
<li>首页封面和文案可以任意更换，主题内附送 6 张精美高清壁纸</li>
<li>时间轴式的归档页</li>
<li>支持 <code>黑夜阅读</code> 模式</li>
<li>侧边栏可以点击显示或隐藏</li>
<li>支持文章置顶和文章打赏</li>
<li>支持文章字数和阅读时长统计</li>
<li>支持网易云音乐播放</li>
<li>支持  <code>MathJax</code> 和 <code>Katex</code> 数学公式</li>
<li>支持 <code>Mermaid</code> 流程图、状态图、时序图、甘特图</li>
<li><code>TOC</code>  目录在文章页悬浮，跳转更方便</li>
<li>集成了博客加密访问的功能</li>
<li>可设置阅读文章时做密码验证<a href="https://github.com/MikeCoder/hexo-blog-encrypt/blob/master/ReadMe.zh.md">hexo-blog-encrypt</a></li>
<li><a href="https://valine.js.org/">Valine</a>和<a href="https://gitalk.github.io/">Gitalk</a>评论模块（推荐配合<code>leancloud</code>使用  <code>Valine</code>）</li>
<li>集成了<a href="http://busuanzi.ibruce.info/">不蒜子</a>、百度统计、Google Analytics、CNZZ 等统计功能</li>
<li>支持 Github Ribbons</li>
</ol>
<p>如果想体验手机端浏览效果，可以扫一下二维码：</p>
<p><img src="https://s2.loli.net/2022/03/09/Y5VKiwnqHTUhvFX.jpg" alt="手机端效果"></p>
<h1 id="多语言支持"><span id="多语言支持">多语言支持</span></h1><p><code>zh-CN（简体中文）</code> ; <code>en（English）</code> ; <code>zh-TW（繁體中文）</code> ; <code>ja（日本語）</code> ; <code>es（Español）</code> ; <code>de（Deutsch）</code> ; <code>fr（Français）</code> ; <code>ru（Русский）</code> ; <code>ko（한국어）</code> ; <code>vi（Tiếng Việt）</code> ; <code>nl（Nederlands）</code> ; <code>no（norsk）</code> ; <code>pt（Português）</code></p>
<p>Hexo 默认语言为英语（en），请参照上表修改 Hexo 博客目录下的 <code>_config.yml</code> 文件中 <code>language:</code> 的值（第 11 行）。</p>
<h1 id="支持"><span id="支持">支持</span></h1><p>根据 <a href="https://github.com/Shen-Yu/hexo-theme-ayer/blob/master/LICENSE">Ayer 主题的开源许可证</a>，只要你进 <a href="https://github.com/Shen-Yu/hexo-theme-ayer">项目主页</a> 给这个主题右上角点一个 Star 并且不抹掉页脚的主题仓库链接就可以任意修改使用该主题了。</p>
<p>此主题完全开源且免费，目前由我一个人维护，如果你觉得主题不错，可以选择适当打赏我，不在于金额多少，而是能让我更有动力去维护这个主题。打赏请备注说明，谢谢~</p>
<div style="width:100%;text-align:center;font-weight:bold">
<span style="width:30%;display:inline-block">
微信
<img src="https://cdn.jsdelivr.net/gh/Shen-Yu/cdn/picgo/wechatpay.png" alt="wechat" style="width:100%"></span>
<span style="width:30%;;display:inline-block">
支付宝
<img src="https://cdn.jsdelivr.net/gh/Shen-Yu/cdn/picgo/alipay.jpg" alt="alipay" style="width:100%"></span>
</div>

<p>如果你不懂技术，希望我帮忙从零搭建一个类似的网站或者有其他技术类需求，我也愿意提供有偿服务，我的 QQ：448766534</p>
<h1 id="安装"><span id="安装">安装</span></h1><p><strong>方法一：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm i hexo-theme-ayer -S</span><br></pre></td></tr></table></figure>

<ul>
<li>如果是新安装本主题，安装完成后会在根目录生成一个<code>_config.ayer.yml</code>文件，直接编辑<code>_config.ayer.yml</code>文件进行配置即可。</li>
<li>如果是主题升级，建议先把配置内容做备份，然后用<code>npm uninstall hexo-theme-ayer -S</code>先卸载主题，再<code>npm i hexo-theme-ayer -S</code>重新安装。</li>
</ul>
<p><strong>方法二（hexo &lt; 5.0）：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 国内用户如果速度较慢，可以把github地址替换为：https://gitee.com/mirrors/ayer.git</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/Shen-Yu/hexo-theme-ayer.git themes/ayer</span><br></pre></td></tr></table></figure>

<h1 id="修改"><span id="修改">修改</span></h1><p>将博客根目录下的 <code>_config.yml</code> 里的 <code>theme</code> 值修改成 <code>ayer</code></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">ayer</span></span><br></pre></td></tr></table></figure>

<h1 id="更新"><span id="更新">更新</span></h1><p>更新主题可能会覆盖你之前改动过的 config 文件，建议先把 <code>config.yml</code> 里的配置备份一下，然后删掉 ayer 目录后重新 <code>git clone</code> 下载主题，再把配置复制进去。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> themes/ayer</span><br><span class="line">git pull</span><br></pre></td></tr></table></figure>

<p>如果你是用方法二的 npm 安装本主题，那么在根目录执行以下命令就可更新。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm update hexo-theme-ayer -S</span><br></pre></td></tr></table></figure>

<h1 id="主题配置"><span id="主题配置">主题配置</span></h1><p>以下是 ayer 主题目录下的 <code>_config.yml</code> 文件配置，如果你是用方法二的 npm 安装，那么在 Hexo 博客目录下的 <code>_config.ayer.yml</code> 配置就行，注意别把 Hexo 的配置文件和主题的配置文件搞混。另外，请先确保你已经读过 <a href="https://hexo.io/zh-cn/docs/">Hexo 文档</a>。如果你在配置过程中有问题，请先擅用 <a href="https://cn.bing.com/">搜索引擎</a>。如果你搜不到解决方法，你可以参考：<a href="https://gitee.com/shen-yu/shen-yu/tree/dev/">我的博客源码</a>，按照我的一模一样配肯定是不会有问题的。如果对部分字体或颜色等有定制需求，请自行在 css 文件进行修改，主题本身已经很符合审美，自定义配置项也很多，不建议改得花里胡哨，过大的字体和库都会影响博客加载速度。如果还有问题或者建议，那么请在评论区给我留言~</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 侧边栏菜单</span></span><br><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="string">主页:</span> <span class="string">/</span></span><br><span class="line">  <span class="string">归档:</span> <span class="string">/archives</span></span><br><span class="line">  <span class="string">分类:</span> <span class="string">/categories</span></span><br><span class="line">  <span class="string">标签:</span> <span class="string">/tags</span></span><br><span class="line">  <span class="string">摄影:</span> <span class="string">http://shenyu-vip.lofter.com</span></span><br><span class="line">  <span class="string">旅行:</span> <span class="string">/tags/旅行/</span></span><br><span class="line">  <span class="string">关于我:</span> <span class="string">/2019/about</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 站点次标题和打字动效</span></span><br><span class="line"><span class="comment"># https://github.com/mattboldt/typed.js</span></span><br><span class="line"><span class="attr">subtitle:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># 是否开启动效</span></span><br><span class="line">  <span class="attr">text:</span> <span class="string">面朝大海，春暖花开</span> <span class="comment"># 显示的文字</span></span><br><span class="line">  <span class="attr">text2:</span> <span class="string">愿你一生努力，一生被爱</span> <span class="comment"># 滚动播放，如果不需要可以留空</span></span><br><span class="line">  <span class="attr">text3:</span> <span class="string">想要的都拥有，得不到的都释怀</span> <span class="comment"># 最多支持三段文字</span></span><br><span class="line">  <span class="attr">startDelay:</span> <span class="number">0</span> <span class="comment"># 延迟时间</span></span><br><span class="line">  <span class="attr">typeSpeed:</span> <span class="number">200</span> <span class="comment"># 打字速度</span></span><br><span class="line">  <span class="attr">loop:</span> <span class="literal">true</span> <span class="comment"># 是否循环</span></span><br><span class="line">  <span class="attr">backSpeed:</span> <span class="number">100</span> <span class="comment"># 回退速度</span></span><br><span class="line">  <span class="attr">showCursor:</span> <span class="literal">true</span> <span class="comment"># 是否显示光标</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 网站图标和侧边栏logo</span></span><br><span class="line"><span class="attr">favicon:</span> <span class="string">/favicon.ico</span></span><br><span class="line"><span class="attr">logo:</span> <span class="string">/images/ayer-side.svg</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 封面配置</span></span><br><span class="line"><span class="comment"># enable-是否启用封面；path-封面背景图；logo-封面logo</span></span><br><span class="line"><span class="attr">cover:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">/images/cover1.jpg</span> <span class="comment"># /source/images目录下附送多张精美壁纸，可任意更换</span></span><br><span class="line">  <span class="attr">logo:</span> <span class="string">/images/ayer.svg</span> <span class="comment"># 如果不要直接设置成false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 页面顶部进度条</span></span><br><span class="line"><span class="attr">progressBar:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 告示板模块</span></span><br><span class="line"><span class="attr">broadcast:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># true开启，false关闭</span></span><br><span class="line">  <span class="attr">type:</span> <span class="number">2</span> <span class="comment"># 1：自定义输入，2：一言api(https://hitokoto.cn/)</span></span><br><span class="line">  <span class="attr">text:</span> <span class="string">一个安静优雅的hexo主题，快速且响应式。</span> <span class="comment"># type为1时有效</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 文章配置</span></span><br><span class="line"><span class="comment"># 文章太长，截断按钮文字(在需要截断的行增加此标记：&lt;!--more--&gt;)</span></span><br><span class="line"><span class="attr">excerpt_link:</span> <span class="string">阅读更多...</span></span><br><span class="line"><span class="comment"># 如果你嫌每篇文章手动加more标记比较麻烦，又不想在首页全文显示，可以把excerpt_all设置成true，这样首页只会显示文章归档</span></span><br><span class="line"><span class="attr">excerpt_all:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 是否开启代码复制按钮</span></span><br><span class="line"><span class="attr">copy_btn:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment"># 是否开启文章分享按钮</span></span><br><span class="line"><span class="attr">share_enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment"># 国内的社交平台(If you are not in China, maybe you prefer to set:false)</span></span><br><span class="line"><span class="attr">share_china:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment"># 文章分享文字</span></span><br><span class="line"><span class="attr">share_text:</span> <span class="string">分享</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 分页文字</span></span><br><span class="line"><span class="attr">nav_text:</span></span><br><span class="line">  <span class="attr">page_prev:</span> <span class="string">上一页</span></span><br><span class="line">  <span class="attr">page_next:</span> <span class="string">下一页</span></span><br><span class="line">  <span class="attr">post_prev:</span> <span class="string">上一篇</span></span><br><span class="line">  <span class="attr">post_next:</span> <span class="string">下一篇</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 文章页是否显示目录</span></span><br><span class="line"><span class="attr">toc:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 文章中的图片是否支持点击放大</span></span><br><span class="line"><span class="attr">image_viewer:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># https://github.com/willin/hexo-wordcount</span></span><br><span class="line"><span class="comment"># 是否开启字数统计(关闭请设置enable为false)</span></span><br><span class="line"><span class="comment"># 也可以单独在md文件里Front-matter设置`no_word_count: true`属性，来自定义关闭字数统计</span></span><br><span class="line"><span class="attr">word_count:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># 只在文章详情显示(不在首页显示)</span></span><br><span class="line">  <span class="attr">only_article_visit:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 打赏</span></span><br><span class="line"><span class="comment"># 打赏type设定：0-关闭打赏； 1-文章对应的md文件里有reward:true属性，才有打赏； 2-默认开启所有文章均有打赏，如果有些文章你不需要，请在文章对应的md文件里设置no_reward:true</span></span><br><span class="line"><span class="attr">reward_type:</span> <span class="number">2</span></span><br><span class="line"><span class="comment"># 打赏wording</span></span><br><span class="line"><span class="attr">reward_wording:</span> <span class="string">&quot;请我喝杯咖啡吧~&quot;</span></span><br><span class="line"><span class="comment"># 支付宝二维码图片地址，跟你设置logo的方式一样。比如：/images/alipay.jpg</span></span><br><span class="line"><span class="attr">alipay:</span> <span class="string">/images/alipay.jpg</span></span><br><span class="line"><span class="comment"># 微信二维码图片地址</span></span><br><span class="line"><span class="attr">weixin:</span> <span class="string">/images/wechat.jpg</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 版权声明</span></span><br><span class="line"><span class="comment"># 版权声明type设定：0-关闭版权声明； 1-文章对应的md文件里有copyright: true属性，才有版权声明； 2-所有文章均有版权声明</span></span><br><span class="line"><span class="attr">copyright_type:</span> <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 是否启用搜索</span></span><br><span class="line"><span class="attr">search:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># RSS订阅(先安装hexo-generator-feed插件，再去博客根目录config进行配置)</span></span><br><span class="line"><span class="comment"># 不想显示可以直接留空</span></span><br><span class="line"><span class="attr">rss:</span> <span class="string">/atom.xml</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 是否启用黑夜模式开关</span></span><br><span class="line"><span class="attr">darkmode:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 动态背景效果: 0-关闭，1-动态线条(跟随鼠标)</span></span><br><span class="line"><span class="attr">canvas_bg:</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 自定义鼠标样式，直接替换/images/mouse.cur文件</span></span><br><span class="line"><span class="attr">mouse:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">/images/mouse.cur</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 鼠标点击效果：0-关闭，1-爱心，2-爆炸烟花，3-粒子烟花</span></span><br><span class="line"><span class="attr">click_effect:</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 页面宽度自定义（不建议修改，可能造成布局混乱），article_width文章宽度，sidebar_width侧边栏宽度</span></span><br><span class="line"><span class="attr">layout:</span></span><br><span class="line">  <span class="attr">article_width:</span> <span class="string">80rem</span></span><br><span class="line">  <span class="attr">sidebar_width:</span> <span class="string">8rem</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># GitHub Ribbons-封面右上角的forkme，换样式直接在source/images目录下替换forkme图片</span></span><br><span class="line"><span class="attr">github:</span></span><br><span class="line">  <span class="comment"># (关闭请设置为false)</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">https://github.com/Shen-Yu/hexo-theme-ayer</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 网易云音乐插件</span></span><br><span class="line"><span class="attr">music:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># 播放器尺寸类型(1：小尺寸、2：大尺寸)</span></span><br><span class="line">  <span class="attr">type:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">id:</span> <span class="number">22707008</span> <span class="comment"># 网易云分享的音乐ID(更换音乐请更改此配置项)</span></span><br><span class="line">  <span class="attr">autoPlay:</span> <span class="literal">true</span> <span class="comment"># 是否开启自动播放</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 访问量统计(不蒜子)</span></span><br><span class="line"><span class="attr">busuanzi:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 友盟cnzz统计(url填js代码src链接)</span></span><br><span class="line"><span class="attr">cnzz:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">url:</span> <span class="comment">#</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Google Analytics</span></span><br><span class="line"><span class="attr">google_analytics:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="comment"># 百度统计</span></span><br><span class="line"><span class="attr">baidu_analytics:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Mathjax数学公式</span></span><br><span class="line"><span class="attr">mathjax:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Katex数学公式(allpost设置为false时只有头部设置math:true的文章才开启)</span></span><br><span class="line"><span class="comment"># 需要更换hexo渲染器，npm un hexo-renderer-marked -S &amp;&amp; npm i hexo-renderer-markdown-it-katex -S</span></span><br><span class="line"><span class="attr">katex:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span> <span class="comment"># true</span></span><br><span class="line">  <span class="attr">allpost:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">copy_tex:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># mermaid流程图 三个选项缺一不可(https://mermaid-js.github.io/mermaid/#/)</span></span><br><span class="line"><span class="attr">mermaid:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">cdn:</span> <span class="string">https://cdn.jsdelivr.net/npm/mermaid@8.9.2/dist/mermaid.min.js</span></span><br><span class="line">  <span class="attr">theme:</span> <span class="string">forest</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 网站成立年份(默认为 2019，若填入年份小于当前年份，则显示为 2018-2019 类似的格式)</span></span><br><span class="line"><span class="attr">since:</span> <span class="number">2019</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ICP备案信息尾部显示</span></span><br><span class="line"><span class="attr">icp:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">&quot;http://www.beian.miit.gov.cn/&quot;</span> <span class="comment"># 备案链接</span></span><br><span class="line">  <span class="attr">text:</span> <span class="string">&quot;浙ICP备88888888&quot;</span> <span class="comment"># 备案信息</span></span><br><span class="line"><span class="comment"># 公安备案信息尾部显示</span></span><br><span class="line"><span class="attr">gongan:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">img:</span> <span class="string">/images/beian.png</span> <span class="comment">#公安备案图片</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">&quot;http://www.beian.gov.cn/portal/registerSystemInfo?recordcode=01234567890123&quot;</span> <span class="comment">#公安备案链接</span></span><br><span class="line">  <span class="attr">text:</span> <span class="string">&quot;浙公网安备01234567890123号&quot;</span> <span class="comment">#公安备案信息</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 友情链接</span></span><br><span class="line"><span class="attr">friends_link:</span></span><br><span class="line">  <span class="string">Ayer主题:</span> <span class="comment">#网站名称</span></span><br><span class="line">    <span class="comment">#网站地址</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://github.com/Shen-Yu/hexo-theme-ayer</span></span><br><span class="line">    <span class="comment">#网站图片(可忽略不写)</span></span><br><span class="line">    <span class="attr">img:</span> <span class="string">/images/ayer.png</span></span><br><span class="line">  <span class="attr">GitHub:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://github.com/Shen-Yu</span></span><br><span class="line">    <span class="attr">img:</span> <span class="string">https://i.loli.net/2020/09/07/indb4PRYDA98EkN.png</span></span><br><span class="line">  <span class="string">码云:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://gitee.com/shen-yu</span></span><br><span class="line">    <span class="attr">img:</span> <span class="string">https://i.loli.net/2020/09/07/K3AqO7h6krQFlRX.png</span></span><br><span class="line">  <span class="string">Hexo官网:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://hexo.io</span></span><br><span class="line">    <span class="attr">img:</span> <span class="string">https://i.loli.net/2020/09/07/UYGzjo7h68CRWny.png</span></span><br><span class="line">  <span class="string">Hexo图表插件:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://github.com/Shen-Yu/hexo-tag-chart</span></span><br><span class="line">    <span class="attr">img:</span> <span class="string">https://i.loli.net/2020/09/07/GIXBYE5SoylhR1r.png</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 评论：1、Valine(推荐)；2、Gitalk；3、Twikoo; 4.MiniValine</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1、Valine[一款快速、简洁且高效的无后端评论系统](https://github.com/xCss/Valine)</span></span><br><span class="line"><span class="comment"># 启用Valine必须先创建leancloud应用， 获取 id|key 填入即可</span></span><br><span class="line"><span class="attr">leancloud:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">app_id:</span> <span class="comment">#</span></span><br><span class="line">  <span class="attr">app_key:</span> <span class="comment">#</span></span><br><span class="line"><span class="comment"># Valine配置</span></span><br><span class="line"><span class="attr">valine:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># 是否启用</span></span><br><span class="line">  <span class="attr">avatar:</span> <span class="string">monsterid</span> <span class="comment"># 头像样式(https://valine.js.org/avatar.html)</span></span><br><span class="line">  <span class="attr">placeholder:</span> <span class="string">给我的文章加点评论吧~</span> <span class="comment"># placeholder</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2、Gitalk(https://github.com/gitalk/gitalk)</span></span><br><span class="line"><span class="attr">gitalk:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span> <span class="comment"># true</span></span><br><span class="line">  <span class="attr">clientID:</span> <span class="comment"># GitHub Application Client ID</span></span><br><span class="line">  <span class="attr">clientSecret:</span> <span class="comment"># Client Secret</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="comment"># Repository name</span></span><br><span class="line">  <span class="attr">owner:</span> <span class="comment"># GitHub ID</span></span><br><span class="line">  <span class="attr">admin:</span> <span class="comment"># GitHub ID</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3、Twikoo(https://github.com/imaegoo/twikoo)</span></span><br><span class="line"><span class="attr">twikoo:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">envId:</span> <span class="comment">#</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 4、MiniValine</span></span><br><span class="line"><span class="comment"># See: https://github.com/MiniValine/MiniValine</span></span><br><span class="line"><span class="attr">minivaline:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">serverURL:</span> <span class="string">https://minivaline.your-domain.com</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 首页广告配置</span></span><br><span class="line"><span class="comment"># 可以根据需要自行增加ad_3，ad_4...，留空则不显示</span></span><br><span class="line"><span class="attr">ads:</span></span><br><span class="line">  <span class="attr">ad_1:</span></span><br><span class="line">    <span class="attr">title:</span> <span class="string">vultr优惠vps</span></span><br><span class="line">    <span class="attr">img:</span> <span class="string">https://cdn.jsdelivr.net/gh/Shen-Yu/cdn/img/vultr.png</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://www.vultr.com/?ref=8630075</span></span><br><span class="line">    <span class="attr">width:</span> <span class="number">300</span></span><br><span class="line">  <span class="attr">ad_2:</span></span><br><span class="line">    <span class="attr">title:</span> <span class="string">云服务器全球购低至2折</span></span><br><span class="line">    <span class="attr">img:</span> <span class="string">https://cdn.jsdelivr.net/gh/Shen-Yu/cdn/img/ad_2.jpg</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://curl.qcloud.com/kvO7hb43</span></span><br><span class="line">    <span class="attr">width:</span> <span class="number">300</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 网站开启加密访问，密码可设置任何字符</span></span><br><span class="line"><span class="attr">lock:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">password:</span> <span class="number">123456</span></span><br></pre></td></tr></table></figure>

<h2 id="插件必需"><span id="插件必需">插件(必需)</span></h2><ul>
<li><p><a href="https://github.com/theme-next/hexo-generator-searchdb">hexo-generator-searchdb</a> 用于搜索</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="string">npm</span> <span class="string">install</span> <span class="string">hexo-generator-searchdb</span> <span class="string">--save</span></span><br></pre></td></tr></table></figure>

<p>然后将以下配置复制到你博客根目录下的 <code>_config.yml</code> 里（注意不是 ayer 目录下的）:</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># hexo-generator-searchdb</span></span><br><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span></span><br><span class="line">  <span class="attr">format:</span> <span class="string">html</span></span><br></pre></td></tr></table></figure>
</li>
<li><p><a href="https://github.com/hexojs/hexo-generator-feed">hexo-generator-feed</a> 用于生成 RSS 订阅</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="string">npm</span> <span class="string">install</span> <span class="string">hexo-generator-feed</span> <span class="string">--save</span></span><br></pre></td></tr></table></figure>

<p>然后将以下配置复制到你博客根目录下的 <code>_config.yml</code> 里（注意不是 ayer 目录下的）:</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">feed:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">atom</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">atom.xml</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">20</span></span><br><span class="line">  <span class="attr">hub:</span></span><br><span class="line">  <span class="attr">content:</span></span><br><span class="line">  <span class="attr">content_limit:</span> <span class="number">140</span></span><br><span class="line">  <span class="attr">content_limit_delim:</span> <span class="string">&quot; &quot;</span></span><br><span class="line">  <span class="attr">order_by:</span> <span class="string">-date</span></span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="插件可选"><span id="插件可选">插件(可选)</span></h2><ul>
<li><p><a href="https://github.com/netcan/hexo-generator-index-pin-top">hexo-generator-index-pin-top</a> 用于文章置顶</p>
</li>
<li><p><a href="https://github.com/MikeCoder/hexo-blog-encrypt/blob/master/ReadMe.zh.md">hexo-blog-encrypt</a> 用于文章加密</p>
</li>
<li><p><a href="https://github.com/MoePlayer/hexo-tag-aplayer/blob/master/docs/README-zh_cn.md">hexo-tag-aplayer</a> 用于播放音乐</p>
</li>
<li><p><a href="https://github.com/MoePlayer/hexo-tag-dplayer">hexo-tag-dplayer</a> 用于播放视频</p>
</li>
<li><p><a href="https://github.com/EYHN/hexo-helper-live2d/blob/master/README.zh-CN.md">hexo-helper-live2d</a> 二次元看板娘</p>
</li>
</ul>
<p>更多插件请见 <a href="https://hexo.io/plugins/">hexo 插件市场</a></p>
<h2 id="分类"><span id="分类">分类</span></h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new page categories</span><br></pre></td></tr></table></figure>

<p>然后将以下复制到 &#x2F;source&#x2F;categories&#x2F;index.md 文件</p>
<figure class="highlight md"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: categories</span><br><span class="line">type: &quot;categories&quot;</span><br><span class="line"><span class="section">layout: &quot;categories&quot;</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure>

<h2 id="标签"><span id="标签">标签</span></h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new page tags</span><br></pre></td></tr></table></figure>

<p>配置同分类一样</p>
<h2 id="友情链接"><span id="友情链接">友情链接</span></h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new page friends</span><br></pre></td></tr></table></figure>

<p>然后将以下复制到 &#x2F;source&#x2F;friends&#x2F;index.md 文件</p>
<figure class="highlight md"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: friends</span><br><span class="line">type: friends</span><br><span class="line"><span class="section">layout: &quot;friends&quot;</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure>

<p>然后在 ayer 主题目录下的 <code>_config.yml</code> 中自定义 <code>friends_link</code> 配置项即可</p>
<h2 id="相册"><span id="相册">相册</span></h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new page photos</span><br></pre></td></tr></table></figure>

<p>然后将以下复制到 &#x2F;source&#x2F;photos&#x2F;index.md 文件，<code>img_url</code> 替换成图片路径，<code>caption</code> 替换成图片名称</p>
<figure class="highlight md"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: Gallery</span><br><span class="line"></span><br><span class="line"><span class="section">albums: [[&quot;img<span class="emphasis">_url&quot;, &quot;img_</span>caption&quot;], [&quot;img<span class="emphasis">_url&quot;, &quot;img_</span>caption&quot;]]</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure>

<h2 id="文章目录"><span id="文章目录">文章目录</span></h2><p>用 Tocbot 解析文章标题并生成目录</p>
<ul>
<li>将以下配置复制到你 ayer 主题目录下的 <code>_config.yml</code> 里：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Toc</span></span><br><span class="line">toc: <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<ul>
<li>当然你可能并不想所有文章都生成悬浮目录，你可以在文章顶部的配置中加一行来进行关闭：</li>
</ul>
<figure class="highlight md"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line"><span class="section">no<span class="emphasis">_toc: true</span></span></span><br><span class="line"><span class="emphasis"><span class="section">---</span></span></span><br></pre></td></tr></table></figure>

<hr>
<h1 id="常见问题"><span id="常见问题">常见问题</span></h1><h2 id="一本地图片引用了却无法显示"><span id="一本地图片引用了却无法显示">一.本地图片引用了却无法显示</span></h2><blockquote>
<p>插入图片的两种方法：</p>
</blockquote>
<ol>
<li>引用图床</li>
<li>引用本地图片。为了防止路径出错，建议使用图床。</li>
</ol>
<h3 id="1图床"><span id="1图床">1.图床</span></h3><p>推荐使用：<a href="https://sm.ms/">SM.MS</a>，<a href="https://www.superbed.cn/">聚合图床</a></p>
<h3 id="2本地图片"><span id="2本地图片">2.本地图片</span></h3><p>参照 <a href="https://hexo.io/zh-cn/docs/asset-folders">Hexo 文档</a>，然后用这种方式引用图片：</p>
<figure class="highlight md"><table><tr><td class="code"><pre><span class="line">&#123;% asset<span class="emphasis">_img image.jpg [title] %&#125;</span></span><br></pre></td></tr></table></figure>

<p>如果还是无法显示，请尝试在文章里用 html 的 img 标签来引用本地图片。</p>
<h2 id="二可以启动但是样式变形了"><span id="二可以启动但是样式变形了">二.可以启动但是样式变形了</span></h2><p>这很可能是因为你把博客部署到了服务器子目录，导致静态资源加载的路径不对，在此强烈建议你部署到根目录，github 和码云都支持根目录部署，只要你把仓库名搞成和用户名一样就行了。</p>
<h2 id="三点击侧边栏页面无法显示"><span id="三点击侧边栏页面无法显示">三.点击侧边栏页面无法显示</span></h2><p>原因：ayer 主题目录下的 <code>config.yml</code> 里 menu 属性的路径不对，这需要你根据页面路径手动配置。</p>
<p>以我的博客为例：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="string">主页:</span> <span class="string">/</span></span><br><span class="line">  <span class="string">归档:</span> <span class="string">/archives</span></span><br><span class="line">  <span class="string">分类:</span> <span class="string">/categories</span></span><br><span class="line">  <span class="string">标签:</span> <span class="string">/tags</span></span><br><span class="line">  <span class="string">旅行:</span> <span class="string">/tags/旅行/</span></span><br><span class="line">  <span class="string">摄影:</span> <span class="string">http://shenyu-vip.lofter.com</span></span><br><span class="line">  <span class="string">关于我:</span> <span class="string">/2019/about</span></span><br></pre></td></tr></table></figure>

<p>上面的 <code>归档/archives</code> 是固定的，你不需要修改，<code>标签</code>和<code>分类</code>都需要手动创建目录，<code>旅行</code>实际上就是一个标签页，当你在文章头部设置 tags 属性后就会自动生成，<code>摄影</code>是一个站外的绝对路径，<code>关于我</code>实际上就是一个正常的文章页。好了，现在一个侧边栏导航就已经配置好了。</p>
<h2 id="四为什么修改了配置却没有效果"><span id="四为什么修改了配置却没有效果">四.为什么修改了配置却没有效果</span></h2><p>建议每次生成站点或部署之前都用 <code>hexo clean</code> 命令清理一下缓存，请使用 Ctrl + F5 清除缓存并刷新页面。</p>
<h2 id="五怎么修改大标题和站点信息"><span id="五怎么修改大标题和站点信息">五.怎么修改大标题和站点信息</span></h2><p>参考 <a href="https://hexo.io/zh-cn/docs/configuration">Hexo 文档</a></p>
<p>站点配置文件 <code>_config.yml</code> 是 Hexo 站点根目录下的主配置文件（还不知道是哪里的，自己搜索），注意：别和 <code>ayer</code> 主题目录下的 <code>_config.yml</code> 搞混了。</p>
<p>修改网站各种资料，例如标题、副标题和邮箱等个人资料，请修改 Hexo 博客目录下的 <code>_config.yml</code></p>
<p>以我的博客为例：<br><img src="https://pic.downk.cc/item/5e75c69c9d7d586a54cf119d.jpg"></p>
<h2 id="六怎么添加百度或谷歌统计"><span id="六怎么添加百度或谷歌统计">六.怎么添加百度或谷歌统计</span></h2><h3 id="百度统计"><span id="百度统计">百度统计</span></h3><p>参考这里：<a href="https://tongji.baidu.com/web/help/article?id=174&type=0&castk=LTE=">百度统计代码介绍</a></p>
<p>在 ayer 的 config 配置里的 <code>baidu_analytics</code> 填上百度统计代码中的 <code>hm.js?</code> 后面那一串东西</p>
<h3 id="谷歌统计"><span id="谷歌统计">谷歌统计</span></h3><p>参考这里：<a href="https://support.google.com/analytics/answer/1008015?hl=en">Get started with Google Analytics</a></p>
<p>在 ayer 的 config 配置里的 <code>google_analytics</code> 填上谷歌统计代码的跟踪 ID，即 UA 值(包含 UA)</p>
<h2 id="七怎么查看文章的访问量"><span id="七怎么查看文章的访问量">七.怎么查看文章的访问量</span></h2><p>在 ayer 的 config 配置里有 <code>busuanzi</code> 选项，默认设置为 <code>enable:true</code>，就开启了站点访问量的统计，站点尾部左下角的 <code>PV</code> 代表了当前页的访问次数，<code>UV</code> 代表了当前站点的访问人数。注意：不蒜子统计是根据当前域名来统计的，你在本地启动的时候由于是 localhost，所以数字会很大，部署到线上之后就会根据域名重新统计。</p>
<h2 id="八网易云音乐无法播放"><span id="八网易云音乐无法播放">八.网易云音乐无法播放</span></h2><p>这是由于网易云音乐对部分歌曲做了版权限制，你可以多换几首试试，配置文件里的默认歌曲 <code>潮鳴り</code> 是可以播放的。如果你动手能力强，也可以试试音乐播放插件 <a href="https://github.com/MoePlayer/hexo-tag-aplayer/blob/master/docs/README-zh_cn.md">hexo-tag-aplayer</a>，配合<code>MetingJS</code>可以支持对于 QQ 音乐、网易云、虾米、酷狗、百度等平台的音乐播放。</p>
<h2 id="九分享链接无法打开"><span id="九分享链接无法打开">九.分享链接无法打开</span></h2><p>你需要在 Hexo 博客目录下的 <code>_config.yml</code> 文件中把 url 配置成部署后的域名。</p>
<h2 id="十怎么让搜索引擎收录站点"><span id="十怎么让搜索引擎收录站点">十.怎么让搜索引擎收录站点</span></h2><p>参考：<a href="/2020/hexo-seo">Hexo 站点 SEO 优化技巧</a></p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>技术</tag>
      </tags>
  </entry>
  <entry>
    <title>IP地址的构成、相同网段、网络掩码</title>
    <url>/2022/03/11/IP%E5%9C%B0%E5%9D%80%E7%9A%84%E6%9E%84%E6%88%90%E3%80%81%E7%9B%B8%E5%90%8C%E7%BD%91%E6%AE%B5%E3%80%81%E7%BD%91%E7%BB%9C%E6%8E%A9%E7%A0%81/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><strong>看完这篇文章希望可以解答的问题是：</strong></p>
<figure class="highlight armasm"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、<span class="built_in">IP</span>地址的构成</span><br><span class="line"><span class="number">2</span>、什么是网络掩码？</span><br><span class="line"><span class="number">3</span>、如何才算是处于相同网段的通信？</span><br></pre></td></tr></table></figure>

<p><strong>看懂所需要的门槛是</strong>：二进制换算</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">计算机之间的通信，可以分为相同网段的通信和不同网段的通信。那什么是相同网段和不同网段呢？不管三七二十一，先画个图，感受一下。</span><br></pre></td></tr></table></figure>

<p><img src="https://s2.loli.net/2022/03/11/UE61DOpI934ztyF.jpg" alt="download.png"><br>员工A和B就属于相同网段，A与C、B与C就是不同网段。在图中我们可以看到有IP地址和网关两个玩意儿，他们究竟是什么呢？为什么又能来区分相同网段和不同网段？</p>
<p>在回答之前，先介绍一下什么是IP地址：</p>
<figure class="highlight x86asm"><table><tr><td class="code"><pre><span class="line"><span class="built_in">IP</span>地址相当于网络中的身份唯一认证ID，跟身份证ID一样是唯一的，唯一不同的是，<span class="built_in">IP</span>地址是可以变的，只是不管怎么变，都将会是唯一的。Mac地址的性质更加接近于身份证ID，它是设备的唯一ID。</span><br></pre></td></tr></table></figure>

<p><strong>IP地址 &#x3D; 网络地址 + 主机地址</strong></p>
<p>IP地址目前普遍是IPv4版本，由32位二进制数分成4组，每组1字节Byte（8比特Bit）组成。分别用十进制表示再用圆点隔开，就是现在的172.1.1.10。</p>
<p><strong>什么是网络地址和主机地址？图中172.1.1.10&#x2F;24的24又指的是什么？</strong><br>说到这里不得不解释一下什么是子网掩码(又称网络掩码)</p>
<p>24指的是子网掩码的长度，用子网掩码来表示，就是：255.255.255.0。它的作用主要是用来区分网络地址和主机地址。</p>
<p>上面我们说了，员工A和B就属于相同网段。而归根究底是因为他们有相同的网络号，偏偏子网掩码又是用来告诉我们他们是真的有着相同的网络号的。</p>
<p>255.255.255.0用二进制表示，则是：</p>
<figure class="highlight dns"><table><tr><td class="code"><pre><span class="line"><span class="number">11111111</span>.<span class="number">11111111</span>.<span class="number">11111111</span>.<span class="number">00000000</span></span><br></pre></td></tr></table></figure>

<p>172.1.1.10用二进制表示，则是：</p>
<figure class="highlight dns"><table><tr><td class="code"><pre><span class="line"><span class="number">10101100</span>.<span class="number">00000001</span>.<span class="number">00000001</span>.<span class="number">00001010</span></span><br></pre></td></tr></table></figure>

<p>连续24个1，也就是172.1.1.10&#x2F;24中24的由来。</p>
<p>通过按位与最终得到网段号：</p>
<figure class="highlight dns"><table><tr><td class="code"><pre><span class="line"><span class="number">10101100</span>.<span class="number">00000001</span>.<span class="number">00000001</span>.<span class="number">00000000</span></span><br></pre></td></tr></table></figure>

<p>按位与&#x2F;&amp; : 1 &amp; 1 &#x3D;&gt; 1 、 1 &amp; 0 &#x3D;&gt; 0 、 0 &amp; 0 &#x3D;&gt; 0<br><img src="https://s2.loli.net/2022/03/11/yLrwR3f2sN1DVdx.png" alt="download \(1\).png"></p>
<p>所以172.1.1.10中剩下的10(00001010)即是主机号，172.1.1是网段号，那回到上面的员工A、B、C中：<br>    员工A（172.1.1.10&#x2F;24）的网段号：172.1.1<br>    员工B（172.1.1.11&#x2F;24）的网段号：172.1.1<br>    员工C（172.1.2.10&#x2F;24）的网段号：172.1.2<br>    显然A、B在同一个网段里</p>
<p>是不是看上去很容易了，那我们学以致用，<strong>现在有一个IP地址：172.1.1.10&#x2F;25，请问，这里的网络位、主机位是多少？主机数是多少？网络地址和广播地址是多少？网络掩码是多少？</strong></p>
<p>解题步骤：<br>1、首先我们将IP地址转为32位二进制：</p>
<figure class="highlight dns"><table><tr><td class="code"><pre><span class="line"><span class="number">10101100</span>.<span class="number">00000001</span>.<span class="number">00000001</span>.<span class="number">00001010</span></span><br></pre></td></tr></table></figure>

<p>2、从地址中知道子网掩码的长度是25，总长为32Bit，那我们可以写上25个连续的1，剩下的补上0，得到：</p>
<figure class="highlight dns"><table><tr><td class="code"><pre><span class="line"><span class="number">11111111</span>.<span class="number">11111111</span>.<span class="number">11111111</span>.<span class="number">10000000</span> (<span class="number">255.255.255.128</span>)</span><br></pre></td></tr></table></figure>

<p>按位与操作后，可以拿到网络位：</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">10101100</span>.<span class="number">00000001</span>.<span class="number">00000001</span>.<span class="number">1</span>xxxxxxx</span><br></pre></td></tr></table></figure>

<p>3、那网络地址和广播地址是什么呢，我们将上面的7个x，改为0，得到的就是网络地址（网络号），全部改为1，得到的就是广播地址。所以：</p>
<figure class="highlight dns"><table><tr><td class="code"><pre><span class="line">网络地址：<span class="number">10101100</span>.<span class="number">00000001</span>.<span class="number">00000001</span>.<span class="number">10000000</span></span><br><span class="line">十进制：<span class="number">172.1.1.128</span></span><br><span class="line">广播地址: <span class="number">10101100</span>.<span class="number">00000001</span>.<span class="number">00000001</span>.<span class="number">11111111</span></span><br><span class="line">十进制：<span class="number">172.1.1.255</span></span><br></pre></td></tr></table></figure>

<p>4、那么我们的主机位有多少呢？</p>
<figure class="highlight accesslog"><table><tr><td class="code"><pre><span class="line"><span class="number">172.1.1.128</span> ~<span class="number">172</span>.<span class="number">1</span>.<span class="number">1</span>.<span class="number">255</span> 之间（抛开网络地址和广播地址）一共可以有<span class="number">126</span>个主机位。</span><br></pre></td></tr></table></figure>

<p>当然这样算太累了，用一个比较简便的算法，<strong>IP地址总长 32 - 子网掩码长度 25 &#x3D; 主机位 7，那么根据排列组合主机位 &#x3D; 2 ^ 7 - 2 &#x3D; 126</strong>，减2是减去广播地址以及网络地址。</p>
<p>算完上面的题目，是不是感觉清晰了很多，那问题又来了？<strong>255.255.255.198这个掩码又是不是合法呢？</strong></p>
<p>我们上面的掩码长度，都是连续的1，可 255.255.255.198转为二进制是：11111111.11111111.11111111.11000110</p>
<p>不是连续的1了，很多人认为，这样的子网掩码是不合法的。这是错误的理解，IP协议中给子网掩码提供了一定得灵活性，允许子网掩码中的0和1不连续，但是这样的子网掩码给分配主机以及找到相同网段都造成了一定的难度。市面上也只有极少路由器支持在子网中这样使用。所以实际应用中大多都是采用上述方式。</p>
<p>当我们的企业、公司去申请一个IP地址时，实际上拿到的是网络号，通过网络的性质以及规模，由自己的企业去自行分配主机号。</p>
<p>当然，网络号自然是要划分三六九等的，因为网络的规模差异比较大、而我们的IP资源有限，根据网络号和主机地址来分，主要分为A、B、C三类和特殊地址D、E（可以粗略了解，传送门：<a href="https://link.segmentfault.com/?enc=fReILbGBAK25qpXGAwKzzQ==.nx8VGSwf8h9QAo6De4PXQhTeF6ZCQOzmX6D60jJ+e1pt3OiOfArjmmvC0WyqNP++">https://blog.51cto.com/huchina/2159073</a>）</p>
<p>至此，文章开头的问题，应该是有所解答了。</p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title></title>
    <url>/2022/03/13/linux%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><hr>
<h2 id="titlelinux基本知识二-tagslinux"><span id="titlelinux基本知识二-tagslinux">‘title:linux基本知识（二） tags:linux’</span></h2><h2 id="1vim编辑器"><span id="1vim编辑器">1.vim编辑器</span></h2><p>所有的 Unix Like 系统都会内建 vi 文书编辑器，其他的文书编辑器则不一定会存在。但是目前我们使用比较多的是 vim 编辑器。vim 具有程序编辑的能力，可以主动<strong>的以字体颜色辨别语法的正确性</strong>，方便程序设计</p>
<p><img src="https://s2.loli.net/2022/03/13/P1meIBDhyu34Aln.gif" alt="img"></p>
<p>基本上 vi&#x2F;vim 共分为三种模式，分别是<strong>命令模式（Command mode）</strong>，<strong>输入模式（Insert mode）</strong>和<strong>底线命令模式（Last line mode）</strong>。</p>
<p><img src="https://s2.loli.net/2022/03/13/Sg3hmeMPwUliW75.png" alt="img"></p>
<h3 id="命令模式"><span id="命令模式">命令模式：</span></h3><p>用户刚刚启动 vi&#x2F;vim，便进入了命令模式。</p>
<p>此状态下敲击键盘动作会被Vim识别为命令，而非输入字符。比如我们此时按下i，并不会输入一个字符，i被当作了一个命令。</p>
<p>以下是常用的几个命令：</p>
<ul>
<li><strong>i</strong> 切换到输入模式，以输入字符。</li>
<li><strong>x</strong> 删除当前光标所在处的字符。</li>
<li><strong>:</strong> 切换到底线命令模式，以在最底一行输入命令。</li>
</ul>
<p>若想要编辑文本：启动Vim，进入了命令模式，按下i，切换到输入模式。</p>
<p>命令模式只有一些最基本的命令，因此仍要依靠底线命令模式输入更多命令。</p>
<h3 id="输入模式"><span id="输入模式">输入模式</span></h3><p>在命令模式下按下i就进入了输入模式。</p>
<p>在输入模式中，可以使用以下按键：</p>
<ul>
<li><strong>字符按键以及Shift组合</strong>，输入字符</li>
<li><strong>ENTER</strong>，回车键，换行</li>
<li><strong>BACK SPACE</strong>，退格键，删除光标前一个字符</li>
<li><strong>DEL</strong>，删除键，删除光标后一个字符</li>
<li><strong>方向键</strong>，在文本中移动光标</li>
<li><strong>HOME</strong>&#x2F;<strong>END</strong>，移动光标到行首&#x2F;行尾</li>
<li><strong>Page Up</strong>&#x2F;<strong>Page Down</strong>，上&#x2F;下翻页</li>
<li><strong>Insert</strong>，切换光标为输入&#x2F;替换模式，光标将变成竖线&#x2F;下划线</li>
<li><strong>ESC</strong>，退出输入模式，切换到命令模式</li>
</ul>
<h2 id="2linux账号和密码文件"><span id="2linux账号和密码文件">2.Linux账号和密码文件</span></h2><p>Linux系统中，所有用户（包括系统管理员）的账号和密码都可以在&#x2F;etc&#x2F;passwd和&#x2F;etc&#x2F;<a href="https://so.csdn.net/so/search?q=shadow&spm=1001.2101.3001.7020">shadow</a>这两个文件中找到，（用户和密码就放在文件中，不怕被其他人看的或者修改吗？&#x2F;etc&#x2F;passwd只有系统管理员才可以修改的，其他用户可以查看，&#x2F;etc&#x2F;shadow其他用户看不了）</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@localhost Python-3.5.0]# vim /etc/shadow</span><br><span class="line">[root@localhost Python-3.5.0]# ls -al /etc/passwd /etc/shadow</span><br><span class="line">-rw-r--r--. 1 root root 2250 12月 14 00:17 /etc/passwd</span><br><span class="line">----------. 1 root root 1263 12月 14 00:17 /etc/shadow</span><br></pre></td></tr></table></figure>

<h3 id="x2fetcx2fpasswd"><span id="x2fetcx2fpasswd">&#x2F;etc&#x2F;passwd</span></h3><p>通过指令 vi &#x2F;etc&#x2F;passwd 打开passwd文件来看看，下面列举部分内容如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">daemon:x:1:1:daemon:/usr/sbin:/bin/sh</span><br><span class="line">bin:x:2:2:bin:/bin:/bin/sh</span><br><span class="line">sys:x:3:3:sys:/dev:/bin/sh</span><br></pre></td></tr></table></figure>

<p>上面每一行都代表一个用户，每一行又通过[:]分为七个部分。</p>
<p>　　1、账号名称<br>　　2、原先用来保存密码的，现在密码都放在&#x2F;etc&#x2F;shadow中，所以这里显示x<br>　　3、UID，也就是使用者ID。默认的系统管理员的UID为0，我们添加用户的时候最好使用1000以上的UID，1-1000范围的UID最好保留给系统用。<br>　　4、GID，也就是群组ID<br>　　5、关于账号的一些说明信息（暂时可以忽略）<br>　　6、账号的家目录，家目录就是你登陆系统后默认的那个目录<br>　　7、账号使用的shell</p>
<h3 id="x2fetcx2fshadow"><span id="x2fetcx2fshadow">&#x2F;etc&#x2F;shadow</span></h3><p> vi &#x2F;etc&#x2F;shadow</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root:!:15324:0:99999:7:::</span><br><span class="line">daemon:*:15259:0:99999:7:::</span><br><span class="line">bin:*:15259:0:99999:7:::</span><br><span class="line">letuknowit:$1$cPf/cIvr$sCws95uSip2ljTK052DDB.:15400:5:60:7:2:15490:</span><br></pre></td></tr></table></figure>

<p>这里也是由[:]来进行分割，但是这里一共分出来九个栏目，每个栏目的解释如下：</p>
<p>　　1、账户名称（密码需要与账户对应的嘛）<br>　　2、加密后的密码（总不能学CSDN放明文密码，是吧），如果这一栏的第一个字符为!或者*的话，说明这是一个不能登录的账户，从上面可以看出，ubuntu默认的就不启用root账户。<br>　　3、最近改动密码的日期（不是日期吗，咋是一堆数字，别急，这个是从1970年1月1日算起的总的天数）。那怎么才能知道今天距1970年1月1日有多少天呢？很简单，你改下密码，然后看下这个栏目中的数字是多少就可以了！<br>　　4、密码不可被变更的天数：设置了这个值，则表示从变更密码的日期算起，多少天内无法再次修改密码，如果是0的话，则没有限制<br>　　5、密码需要重新变更的天数：密码经常更换才能保证安全，为了提醒某些经常不更换密码的用户，可以设置一个天数，强制让用户更换密码，也就是说该用户的密码会在多少天后过期，如果为99999则没有限制<br>　　6、密码过期预警天数：如果在5中设置了密码需要重新变更的天数，则会在密码过期的前多少天进行提醒，提示用户其密码将在多少天后过期<br>　　7、密码过期的宽恕时间：如果在5中设置的日期过后，用户仍然没有修改密码，则该用户还可以继续使用的天数<br>　　8、账号失效日期，过了这个日期账号就不能用了<br>　　9、保留的</p>
<p>以上面最后用户letuknowit为例（15400对应的日期为2012年3月1日），其保护如下信息：</p>
<p>　　3、用户letuknowit最近一次修改密码的日期是2012年3月1日，<br>　　4、在2012年3月6日之前不能再改动密码了，<br>　　5、在2012-3-1到2012-4-29期间letuknowit需要更改密码，<br>　　6、在2012-4-29之前的7天，letuknowit登陆系统的时候，系统会提示letuknowit其密码即将过期，<br>　　7、如果letuknowit一直到2012-4-29都没有修改密码，则其仍然可以继续使用该账户2天，2天后该账户将不可用<br>　　8、无论如何，到了2012年5月29日，该账号都将失效</p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/03/13/Linux%E4%B8%8B-%E7%9B%AE%E5%BD%95usr%E7%BC%A9%E5%86%99-%E5%8F%8A-%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84%E8%AF%B4%E6%98%8E/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><hr>
<h2 id="titlelinux下-目录x2fusr缩写-及-目录结构说明-categorieslinux"><span id="titlelinux下-目录x2fusr缩写-及-目录结构说明-categorieslinux">‘title:Linux下 目录&#x2F;usr缩写 及 目录结构说明 categories:linux’</span></h2><p>原文链接：<a href="https://blog.csdn.net/u010692239/article/details/52756014">https://blog.csdn.net/u010692239/article/details/52756014</a></p>
<p>在 linux 文件结构中，有一个很神奇的目录 —— &#x2F;usr。</p>
<p>讨论中，大部分观点认为：</p>
<p>usr 是 unix system resources 的缩写；</p>
<p>usr 是 user 的缩写；</p>
<p>usr 是 unix software resources 的缩写。</p>
<p>根据常识判断，是 user 缩写的可能性不大，因为和 &#x2F;home 冲突了嘛。不过是 system resources 还是 software resources 的缩写还真不好说。特此查了好多东西，却发现竟然连 wikipedia 也模棱两可。</p>
<p>后来终于找到了 相关的文档和介绍。（via，cache）</p>
<p>&#x2F;usr usually contains by far the largest share of data on a system. Hence, this is one of the most important directories in the system as it contains all the user binaries, their documentation, libraries, header files, etc…. X and its supporting libraries can be found here. User programs like telnet, ftp, etc…. are also placed here. In the original Unix implementations, &#x2F;usr was where the home directories of the users were placed (that is to say, &#x2F;usr&#x2F;someone was then the directory now known as &#x2F;home&#x2F;someone). In current Unices, &#x2F;usr is where user-land programs and data (as opposed to ’system land’ programs and data) are. The name hasn’t changed, but it’s meaning has narrowed and lengthened from “everything user related” to “user usable programs and data”. As such, some people may now refer to this directory as meaning ‘User System Resources’ and not ‘user’ as was originally intended.（via 1,2）</p>
<p>&#x2F;usr 是系统核心所在，包含了所有的共享文件。它是 unix 系统中最重要的目录之一，涵盖了二进制文件，各种文档，各种头文件，x，还有各种库文件；还有诸多程序，例如 ftp，telnet 等等。</p>
<p>曾经的 &#x2F;usr 还是用户的家目录，存放着各种用户文件 —— 现在已经被 &#x2F;home 取代了（例如 &#x2F;usr&#x2F;someone 已经改为 &#x2F;home&#x2F;someone）。现代的 &#x2F;usr 只专门存放各种程序和数据，用户目录已经转移。虽然  &#x2F;usr 名称未改，不过其含义已经从“用户目录”变成了“unix 系统资源”目录。值得注意的是，在一些 unix 系统上，仍然把 &#x2F;usr&#x2F;someone 当做用户家目录，如 Minix。</p>
<p>至此，真相大白。看来就像前一阵子的 &#x2F;var&#x2F;run 移到 &#x2F;run 一样。</p>
<p>真的是不看不知道，一看吓一跳呀。原来 linux 几经进化，好多目录的诞生和用途已经产生了根本的变化。历史车轮在前进，长江后浪推前浪，正所谓：学习历史，收获真知；尽心竭力，前进不止。</p>
<p><em><strong>*&#x2F;usr 目录结构：*</strong></em></p>
<p>&#x2F;usr&#x2F;bin : 所有可执行文件，如 gcc，firefox 等（指不包含在 &#x2F;sbin 和 &#x2F;bin 内的）；</p>
<p>&#x2F;usr&#x2F;include : 各种头文件，编译文件等时需要使用；</p>
<p>&#x2F;usr&#x2F;include&#x2F;’package-name’ : 程序特定的头文件；</p>
<p>&#x2F;usr&#x2F;lib : 所以可执行文件所需要的库文件；</p>
<p>&#x2F;usr&#x2F;local : &#x2F;usr 通常只包含系统发行时自带的程序，而 &#x2F;usr&#x2F;local 则是本地系统管理员用来自由添加程序的目录；</p>
<p>&#x2F;usr&#x2F;X11R6 : x 系统的二进制文件，库文件，文档，字体等。它不等同于 &#x2F;usr 的作用，只有 x 才能调用这些库文件等，其他程序不读取或者使用。因为 linux 没有原生图形界面，而且 linux 大部分情况下是 for server 的，所以图形界面没有意义；其中 X11R6 代表 version 11 release 6；</p>
<p>&#x2F;usr&#x2F;X11R6&#x2F;bin : x 的二进制文件，包含运行 x 的必须文件；</p>
<p>&#x2F;usr&#x2F;X11R6&#x2F;include : x 相关的头文件；</p>
<p>&#x2F;usr&#x2F;X11R6&#x2F;lib : x 库文件；</p>
<p>&#x2F;usr&#x2F;X11R6&#x2F;lib&#x2F;modules : x 的模块，启动时加载。缺少 video4linux, DRI and GLX 和 输入输出设备 模块，将工作不正常；</p>
<p>&#x2F;usr&#x2F;X11R6&#x2F;lib&#x2F;X11&#x2F;fonts : x font server 的字体文件；</p>
<p>&#x2F;usr&#x2F;doc : 文档。实际是 &#x2F;usr&#x2F;share&#x2F;doc 的软链接；</p>
<p>&#x2F;usr&#x2F;etc : 一个极少用到的配置文件存放地；</p>
<p>&#x2F;usr&#x2F;games : 曾经包含游戏等文件，现在很少用到；</p>
<p>&#x2F;usr&#x2F;info : 系统相关信息，是 &#x2F;usr&#x2F;share&#x2F;info 的软链接；</p>
<p>&#x2F;usr&#x2F;man : man 手册，已经移至 &#x2F;usr&#x2F;share&#x2F;man；</p>
<p>&#x2F;usr&#x2F;sbin : 类似 &#x2F;sbin，root 可以执行。但此目录不包含在环境变量 $PATH 中，它包含的程序类似于 chroot, useradd, in.tftpd and pppconfig；</p>
<p>&#x2F;usr&#x2F;share : 它包含了各种程序间的共享文件，如字体，图标，文档等。（&#x2F;usr&#x2F;local 对应的目录是  &#x2F;usr&#x2F;loca&#x2F;share）;</p>
<p>&#x2F;usr&#x2F;share&#x2F;doc : 类似应用程序的 man 手册。它包含程序的说明文件，默认配置文件等；</p>
<p>&#x2F;usr&#x2F;share&#x2F;info : 不常用，已经被 man 代替；</p>
<p>&#x2F;usr&#x2F;share&#x2F;man : app 的 manual；</p>
<p>&#x2F;usr&#x2F;share&#x2F;icons : 应用程序的图标等文件，分为 png，svg 等多种格式；</p>
<p>&#x2F;usr&#x2F;share&#x2F;fonts : 字体文件，系统范围内可使用，~&#x2F;.fonts 仅当前用户可用；</p>
<p>&#x2F;usr&#x2F;src : linux 内核的源码和说明文档等；</p>
<p>&#x2F;usr&#x2F;src&#x2F;linux : linux 源代码；</p>
<p>&#x2F;usr&#x2F;src&#x2F;linux&#x2F;.config : 内核编译过程产生的文件；通常由命令 ‘make config’ ， ‘make menuconfig’ 或 ‘make xconfig’ 执行后产生；</p>
<p>&#x2F;usr&#x2F;src&#x2F;linux&#x2F;.depend, &#x2F;usr&#x2F;src&#x2F;linux&#x2F;.hdepend : ‘make dep’ 检测编译依赖时需要的文件，由 &#x2F;usr&#x2F;src&#x2F;linux&#x2F;.config 产生；</p>
<p>&#x2F;usr&#x2F;src&#x2F;linux&#x2F;COPYING : GNU license；</p>
<p>&#x2F;usr&#x2F;src&#x2F;linux&#x2F;Makefile : 编译内核所需的 Makefile；</p>
<p>&#x2F;usr&#x2F;src&#x2F;linux&#x2F;Rules.make : 当有多个 Makefile 时，根据它的规则执行 make；</p>
<p>&#x2F;usr&#x2F;tmp : 已经被众多发行版抛弃的临时文件夹。</p>
]]></content>
  </entry>
  <entry>
    <title>linux常见命令</title>
    <url>/2022/03/11/linux%E5%B8%B8%E8%A7%81%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote>
<p>学习Linux最重要的就是学习命令，熟悉Linux命令菜鸟玩转linux，Linux 的命令确实非常多，然而熟悉 Linux 的人从来不会因为 Linux 的命令太多而烦恼。因为我们仅仅只需要掌握常用命令，就完全可以驾驭 Linux。接下来，让我们一起来看看都有那些常用的 Linux 命令吧！</p>
<p>参考文章：<a href="https://segmentfault.com/a/1190000020258483">https://segmentfault.com/a/1190000020258483</a></p>
<span id="more"></span>
</blockquote>
<h1 id="一文件目录操作"><span id="一文件目录操作">一.文件目录操作</span></h1><hr>
<h2 id="1ls命令"><span id="1ls命令">1.ls命令</span></h2><p>ls 命令不仅可以查看 linux 文件夹包含的文件而且可以查看文件权限(包括目录、文件夹、文件权限)查看目录信息等等。</p>
<h3 id="常用参数"><span id="常用参数">常用参数</span></h3><ul>
<li>-l：列出长数据串，包含文件的属性与权限等数据</li>
<li>-a:列出全部文件，包括以.开头的隐藏文件</li>
<li>-d:仅列出目录本身</li>
<li>-h：列出文件的容量（GB，KB），需要配合-l参数一起使用</li>
<li>-R:连同文件的子目录一起列出（以递归的方式）</li>
</ul>
<h3 id="使用实例"><span id="使用实例">使用实例</span></h3><p>1.列出home目录下的所有文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ls -a -l /home</span><br><span class="line">ls -al /home</span><br></pre></td></tr></table></figure>

<p>2.列出当前目录下所有以“d”开头的文件目录</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ls -l d*</span><br></pre></td></tr></table></figure>



<h2 id="2cd命令"><span id="2cd命令">2.cd命令</span></h2><p>最基本的命令语句，其他的命令语句要进行操作，都是建立在cd上</p>
<h3 id="命令格式"><span id="命令格式">命令格式</span></h3><p>cd[目录名]</p>
<h3 id="常见使用方式"><span id="常见使用方式">常见使用方式</span></h3><p>1.返回上一次访问的目录</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd -</span><br></pre></td></tr></table></figure>

<p>2.返回用户主目录</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd ~</span><br></pre></td></tr></table></figure>

<h2 id="3pwd命令"><span id="3pwd命令">3.pwd命令</span></h2><p>查看当前目录的地址</p>
<h3 id="常用参数"><span id="常用参数">常用参数</span></h3><ul>
<li>-p：显示实际物理路径，而不是使用链接（link）路径</li>
<li>-L:当目录为链接路径时，显示链接路径</li>
</ul>
<h2 id><span id></span></h2><h2 id="4mkdir命令"><span id="4mkdir命令">4.mkdir命令</span></h2><p>用来创建指定的名称的目录，要求创建目录的用户在当前目录中具有写权限，并且指定的目录名不能是当前目录中已有的目录。</p>
<ul>
<li>-m, –mode&#x3D;模式，设定权限&lt;模式&gt; (类似 chmod)，而不是 rwxrwxrwx 减 umask</li>
<li>-p, –parents 可以是一个路径名称。此时若路径中的某些目录尚不存在,加上此选项后,系统将自动建立好那些尚不存在的目录,即一次可以建立多个目录;</li>
<li>-v, –verbose 每次创建新目录都显示信息</li>
<li>–help 显示此帮助信息并退出</li>
<li>–version 输出版本信息并退出</li>
</ul>
<h3 id="使用实例"><span id="使用实例">使用实例</span></h3><p>1.创建权限为777的目录</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir -m 777 test2</span><br></pre></td></tr></table></figure>

<p>2.创建目录都显示信息</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir -v test</span><br></pre></td></tr></table></figure>

<h2 id="5rm命令"><span id="5rm命令">5.rm命令</span></h2><p>删除一个目录中的一个或多个文件或目录，如果没有使用- r选项，则rm不会删除目录。如果使用 rm 来删除文件，通常仍可以将该文件恢复原状。</p>
<h3 id="常用参数"><span id="常用参数">常用参数</span></h3><ul>
<li>-f, –force <strong>忽略不存在的文件并且进行强制删除</strong>的文件，从不给出提示。</li>
<li>-i, –interactive 进行交互式删除</li>
<li>-r, -R, –recursive 指示rm将参数中列出的<strong>全部目录和子目录均递归地删除</strong>。</li>
<li>-v, –verbose 详细显示进行的步骤</li>
<li>–help 显示此帮助信息并退出</li>
<li>–version 输出版本信息并退出</li>
</ul>
<h3 id="使用实例"><span id="使用实例">使用实例</span></h3><p>2.强制删除 test.txt，系统不再提示。</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">rm</span> <span class="operator">-f</span> test.txt</span><br></pre></td></tr></table></figure>

<p>3.将 test 子目录及目录中所有档案删除。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">rm</span> -r <span class="built_in">test</span></span><br></pre></td></tr></table></figure>

<h2 id="6mv命令"><span id="6mv命令">6.mv命令</span></h2><p>可以用来<strong>移动文件或者将文件改名</strong>（move (rename) files）。当第二个参数类型是文件时，mv命令完成文件重命名。当第二个参数是已存在的目录名称时，源文件或目录参数可以有多个，mv命令将各参数指定的源文件均移至目标目录中。</p>
<ul>
<li>-b ：若需覆盖文件，则覆盖前先行备份</li>
<li>-f ：force 强制的意思，如果目标文件已经存在，不会询问而直接覆盖</li>
<li>-i ：若目标文件 (destination) 已经存在时，就会询问是否覆盖</li>
<li>-u ：若目标文件已经存在，且 source 比较新，才会更新(update)</li>
<li>-t ： –target-directory&#x3D;DIRECTORY move all SOURCE arguments into DIRECTORY，即指定mv的目标目录，该选项适用于移动多个源文件到一个目录的情况，此时目标目录在前，源文件在后</li>
</ul>
<h3 id="使用实例"><span id="使用实例">使用实例</span></h3><p>1.将 test1.txt 重命名为 test2.txt</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mv test.txt text2.text</span><br></pre></td></tr></table></figure>

<p>2.移动文件test1.txt到test2</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mv test1,txt test2</span><br></pre></td></tr></table></figure>

<p>3.将文件test1、test2，移动到test3</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mv test1.txt test2.txt test3</span><br></pre></td></tr></table></figure>



<h2 id="7cp"><span id="7cp">7.cp</span></h2><p>将源文件复制至目标文件，或将多个源文件复制至目标目录。</p>
<h3 id="命令格式"><span id="命令格式">命令格式</span></h3><p>cp [选项] 源文件 目录 或 cp [选项] -t 目录 源文件</p>
<h3 id="常用参数"><span id="常用参数">常用参数</span></h3><ul>
<li>-t –target-directory 指定目标目录</li>
<li>-i –interactive 覆盖前询问（使前面的 -n 选项失效）</li>
<li>-n –no-clobber 不要覆盖已存在的文件（使前面的 -i 选项失效）</li>
<li>-f –force 强行复制文件或目录，不论目的文件或目录是否已经存在</li>
<li>-u –update 使用这项参数之后，只会在源文件的修改时间较目的文件更新时，或是对应的目的文件并不存在，才复制文件</li>
</ul>
<h3 id="使用实例"><span id="使用实例">使用实例</span></h3><p>1.复制文件 test1.txt 到 test1 目录</p>
<figure class="highlight avrasm"><table><tr><td class="code"><pre><span class="line"><span class="keyword">cp</span> test1.txt test1 <span class="meta"># 若文件存在，会提示是否覆盖。若不存在直接完成复制</span></span><br></pre></td></tr></table></figure>

<ol>
<li>复制 test1 整个目录到 test2</li>
</ol>
<figure class="highlight avrasm"><table><tr><td class="code"><pre><span class="line"><span class="keyword">cp</span> -a test1 test2</span><br></pre></td></tr></table></figure>



<h2 id="8touch命令"><span id="8touch命令">8.touch命令</span></h2><p>touch命令参数可更改文档或目录的日期时间，包括存取时间和更改时间。</p>
<h3 id="命令格式"><span id="命令格式">命令格式</span></h3><p>touch [选项] 文件</p>
<h3 id="常用参数"><span id="常用参数">常用参数</span></h3><ul>
<li>-a 或–time&#x3D;atime或–time&#x3D;access或–time&#x3D;use 　只更改存取时间</li>
<li>-c 或–no-create 　不建立任何文档</li>
<li>-d 　使用指定的日期时间，而非现在的时间</li>
<li>-f 　此参数将忽略不予处理，仅负责解决BSD版本touch指令的兼容性问题</li>
<li>-m 或–time&#x3D;mtime或–time&#x3D;modify 　只更改变动时间</li>
<li>-r 　把指定文档或目录的日期时间，统统设成和参考文档或目录的日期时间相同 -t 　使用指定的日期时间，而非现在的时间</li>
</ul>
<h3 id="使用实例"><span id="使用实例">使用实例</span></h3><p>1.创建不存在的文件test.txt</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">touch</span> test.txt</span><br></pre></td></tr></table></figure>

<p>2.更新 test.txt 的实践和 test1.txt 时间戳相同</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">touch</span> -r test.txt test1.txt</span><br></pre></td></tr></table></figure>



<h2 id="9netstat命令"><span id="9netstat命令">9.netstat命令</span></h2><p>Netstat是控制台命令,是一个监控TCP&#x2F;IP网络的非常有用的工具，它可以显示路由表、实际的网络连接以及每一个网络接口设备的状态信息。Netstat用于显示与IP、TCP、UDP和ICMP协议相关的统计数据，一般用于检验本机各端口的网络连接情况。</p>
<p>二、输出信息描述<br>执行netstat后输出如下：</p>
<figure class="highlight tap"><table><tr><td class="code"><pre><span class="line">[root@sy-suz-srv51 ~]<span class="comment"># netstat</span></span><br><span class="line">Active Internet connections (w/o servers)</span><br><span class="line">Proto Recv-Q Send-Q Local Address           Foreign Address         State</span><br><span class="line">tcp       <span class="number"> 0 </span>    <span class="number"> 0 </span>k8sdev.sui:sun-sr-https k8sdev.suiyi.com.:34880 SYN_RECV</span><br><span class="line">tcp       <span class="number"> 0 </span>    <span class="number"> 0 </span>k8sdev.suiyi.com.c:2379 10.1.62.21:47910        ESTABLISHED</span><br><span class="line">tcp       <span class="number"> 0 </span>    <span class="number"> 0 </span>k8sdev.suiyi.com.c:2379 k8sdev.suiyi.com.:37790 ESTABLISHED</span><br><span class="line">tcp       <span class="number"> 0 </span>    <span class="number"> 0 </span>sy-suz-srv:pcsync-https 10.1.62.162:49200       ESTABLISHED</span><br><span class="line">tcp       <span class="number"> 0 </span>    <span class="number"> 0 </span>k8sdev.suiyi.com.:52866 k8sdev.sui:sun-sr-https ESTABLISHED</span><br><span class="line">tcp       <span class="number"> 0 </span>    <span class="number"> 0 </span>k8sdev.suiyi.com.:37728 k8sdev.suiyi.com.c:2379 ESTABLISHED</span><br><span class="line">tcp       <span class="number"> 0 </span>    <span class="number"> 0 </span>k8sdev.sui:sun-sr-https k8sdev.suiyi.com.:52852 ESTABLISHED</span><br><span class="line">tcp       <span class="number"> 0 </span>    <span class="number"> 0 </span>k8sdev.sui:sun-sr-https 10.1.62.162:32841       ESTABLISHED</span><br><span class="line">tcp       <span class="number"> 0 </span>    <span class="number"> 0 </span>sy-suz-srv:pcsync-https sy-suz-srv51:60094      ESTABLISHED</span><br><span class="line">tcp       <span class="number"> 0 </span>    <span class="number"> 0 </span>localhost:webcache      localhost:40136         ESTABLISHED</span><br><span class="line">tcp       <span class="number"> 0 </span>    <span class="number"> 0 </span>k8sdev.suiyi.com.:35466 10.1.62.21:sun-sr-https ESTABLISHED</span><br><span class="line">tcp       <span class="number"> 0 </span>    <span class="number"> 0 </span>k8sdev.suiyi.com.:34358 10.1.62.21:sun-sr-https ESTABLISHED</span><br><span class="line">Active UNIX domain sockets (w/o servers)</span><br><span class="line">Proto RefCnt Flags       Type       State         I-Node   Path</span><br><span class="line">unix <span class="number"> 3 </span>     [ ]         DGRAM                   <span class="number"> 18442 </span>   /run/systemd/notify</span><br><span class="line">unix <span class="number"> 2 </span>     [ ]         DGRAM                   <span class="number"> 18444 </span>   /run/systemd/cgroups-agent</span><br><span class="line">unix <span class="number"> 2 </span>     [ ]         DGRAM                   <span class="number"> 23822 </span>   /var/run/chrony/chronyd.sock</span><br><span class="line">unix <span class="number"> 8 </span>     [ ]         DGRAM                   <span class="number"> 18455 </span>   /run/systemd/journal/socket</span><br><span class="line">unix <span class="number"> 18 </span>    [ ]         DGRAM                   <span class="number"> 18457 </span>   /dev/log</span><br><span class="line">unix <span class="number"> 2 </span>     [ ]         DGRAM                   <span class="number"> 14151 </span>   /var/run/nscd/socket</span><br><span class="line">unix <span class="number"> 2 </span>     [ ]         DGRAM                   <span class="number"> 584 </span>     /run/systemd/shutdownd</span><br><span class="line">unix <span class="number"> 3 </span>     [ ]         STREAM     CONNECTED    <span class="number"> 124439388 </span>/run/dbus/system_bus_socket</span><br><span class="line">unix <span class="number"> 3 </span>     [ ]         STREAM     CONNECTED    <span class="number"> 42312 </span>   /run/systemd/journal/stdout</span><br><span class="line">unix <span class="number"> 3 </span>     [ ]         STREAM     CONNECTED     39909</span><br><span class="line">unix <span class="number"> 3 </span>     [ ]         STREAM     CONNECTED     21675</span><br><span class="line">unix <span class="number"> 3 </span>     [ ]         STREAM     CONNECTED     47538</span><br><span class="line">unix <span class="number"> 3 </span>     [ ]         STREAM     CONNECTED    <span class="number"> 124585242 </span>/var/run/docker/containerd/docker-containerd.sock</span><br><span class="line">unix <span class="number"> 3 </span>     [ ]         STREAM     CONNECTED     21658</span><br><span class="line">unix <span class="number"> 2 </span>     [ ]         STREAM     CONNECTED     30160</span><br><span class="line">unix <span class="number"> 3 </span>     [ ]         STREAM     CONNECTED    <span class="number"> 33750 </span>   /run/systemd/journal/stdout</span><br><span class="line">unix <span class="number"> 3 </span>     [ ]         STREAM     CONNECTED    <span class="number"> 124614293 </span>@/containerd-shim/moby/c44e49ee0f86d8a4109afb176701795c64f44655abb1861275bbd3b2a9f76394/shim.sock</span><br><span class="line">unix <span class="number"> 3 </span>     [ ]         STREAM     CONNECTED    <span class="number"> 124609611 </span>@/containerd-shim/moby/a736ba153c07f0bbf099ae1a1069530e35bfa28ae93f8f235d6c35a6c5ed9ce7/shim.sock</span><br><span class="line">unix <span class="number"> 3 </span>     [ ]         STREAM     CONNECTED    <span class="number"> 124601653 </span>@/containerd-shim/moby/20d3fd59d03455d45b1da2636fca25d0edd79dac1947c17045a797eb8506157c/shim.sock</span><br></pre></td></tr></table></figure>

<p>netstat的输出结果可以分为两个部分</p>
<p>1、Active Internet connections 有源TCP连接，其中”Recv-Q”和”Send-Q”指接收队列和发送队列。这些数字一般都应该是0。如果不是则表示软件包正在队列中堆积。这种情况只能在非常少的情况见到。</p>
<p>2、Active UNIX domain sockets 有源Unix域套接口(和网络套接字一样，但是只能用于本机通信，性能可以提高一倍)。</p>
<p>列名解释：</p>
<p>Proto：显示连接使用的协议。</p>
<p>RefCnt：表示连接到本套接口上的进程号。</p>
<p>Types：显示套接口的类型。</p>
<p>State：显示套接口当前的状态。</p>
<p>Path：表示连接到套接口的其它进程使用的路径名。</p>
<p>三、netstat常见参数<br>-a (all) 显示所有选项，默认不显示LISTEN相关。<br>-t (tcp) 仅显示tcp相关选项。<br>-u (udp) 仅显示udp相关选项。<br>-n 拒绝显示别名，能显示数字的全部转化成数字。<br>-l 仅列出有在 Listen (监听) 的服务状态。</p>
<p>-p 显示建立相关链接的程序名<br>-r 显示路由信息，路由表<br>-e 显示扩展信息，例如uid等<br>-s 按各个协议进行统计<br>-c 每隔一个固定时间，执行该netstat命令。</p>
<p>LISTEN和LISTENING的状态只有用-a或者-l才能看到。</p>
<p>四、netstat网络状态详解<br>一个正常的TCP连接，都会有三个阶段:1、TCP三次握手;2、数据传送;3、TCP四次挥手</p>
<p>如图：</p>
<p><img src="https://segmentfault.com/img/remote/1460000022686711" alt="img"></p>
<p>SYN：(同步序列编号,Synchronize Sequence Numbers)该标志仅在三次握手建立TCP连接时有效。表示一个新的TCP连接请求。</p>
<p>ACK：(确认编号,Acknowledgement Number)是对TCP请求的确认标志,同时提示对端系统已经成功接收所有数据。</p>
<p>FIN：(结束标志,FINish)用来结束一个TCP回话.但对应端口仍处于开放状态,准备接收后续数据。</p>
<p>LISTEN：首先服务端需要打开一个socket进行监听，状态为LISTEN， The socket is listening for incoming connections. 侦听来自远方TCP端口的连接请求 。</p>
<p>SYN_SENT：客户端通过应用程序调用connect进行active open.于是客户端tcp发送一个SYN以请求建立一个连接，之后状态置为SYN_SENT，The socket is actively attempting to establish a connection. 在发送连接请求后等待匹配的连接请求。</p>
<p>SYN_RECV：服务端应发出ACK确认客户端的SYN，同时自己向客户端发送一个SYN， 之后状态置为SYN_RECV ，</p>
<p>A connection request has been received from the network. 在收到和发送一个连接请求后等待对连接请求的确认 。</p>
<p>ESTABLISHED：代表一个打开的连接，双方可以进行或已经在数据交互了， The socket has an established connection. 代表一个打开的连接，数据可以传送给用户。</p>
<p>FIN_WAIT1：主动关闭(active close)端应用程序调用close，于是其TCP发出FIN请求主动关闭连接，之后进入FIN_WAIT1状态。 The socket is closed, and the connection is shutting down. 等待远程TCP的连接中断请求，或先前的连接中断请求的确认。</p>
<p>CLOSE_WAIT：被动关闭(passive close)端TCP接到FIN后，就发出ACK以回应FIN请求(它的接收也作为文件结束符传递给上层应用程序),并进入CLOSE_WAIT， The remote end has shut down, waiting for the socket to close. 等待从本地用户发来的连接中断请求 。</p>
<p>FIN_WAIT2：主动关闭端接到ACK后，就进入了FIN-WAIT-2 ， Connection is closed, and the socket is waiting for a shutdown from the remote end. 从远程TCP等待连接中断请求。</p>
<p>LAST_ACK：被动关闭端一段时间后，接收到文件结束符的应用程序将调用CLOSE关闭连接。这导致它的TCP也发送一个 FIN,等待对方的ACK.就进入了LAST-ACK ， The remote end has shut down, and the socket is closed. Waiting for acknowledgement. 等待原来发向远程TCP的连接中断请求的确认。</p>
<p>TIME_WAIT：在主动关闭端接收到FIN后，TCP就发送ACK包，并进入TIME-WAIT状态。 The socket is waiting after close to handle packets still in the network.等待足够的时间以确保远程TCP接收到连接中断请求的确认。</p>
<p>CLOSING：比较少见， Both sockets are shut down but we still don’t have all our data sent. 等待远程TCP对连接中断的确认。</p>
<p>CLOSED： 被动关闭端在接受到ACK包后，就进入了closed的状态。连接结束， The socket is not being used. 没有任何连接状态。</p>
<p>TIME_WAIT状态的形成只发生在主动关闭连接的一方。<br>主动关闭方在接收到被动关闭方的FIN请求后，发送成功给对方一个ACK后,将自己的状态由FIN_WAIT2修改为TIME_WAIT，而必须再等2倍 的MSL(Maximum Segment Lifetime,MSL是一个数据报在internetwork中能存在的时间)时间之后双方才能把状态 都改为CLOSED以关闭连接。目前RHEL里保持TIME_WAIT状态的时间为60秒。</p>
<p>Linux的相关keepalive参数<br>1、tcp_keepalive_time – INTEGER</p>
<p>How often TCP sends out keepalive messages when keepalive is enabled.（Default: 2hours）</p>
<p>一个连接需要TCP开始发送keepalive探测数据包之前的空闲时间，以秒为单位。</p>
<p>2、tcp_keepalive_probes – INTEGER</p>
<p>How many keepalive probes TCP sends out, until it decides that the connection is broken. （Default value: 9）</p>
<p>发送TCP keepalive探测数据包的最大数量，默认是9.如果发送9个keepalive探测包后对端仍然没有响应，就关掉这个连接。</p>
<p>3、tcp_keepalive_intvl – INTEGER</p>
<p>How frequently the probes are send out. Multiplied by tcp_keepalive_probes it is time to kill not responding connection,<br>after probes started. Default value: 75sec i.e. connection will be aborted after ~11 minutes of retries.</p>
<p>发送两个TCP keepalive探测数据包的间隔时间，默认是75秒。</p>
<p>五、常用netstat相关命令<br>1、列出所有端口 #netstat -a</p>
<p>2、列出所有 tcp 端口 #netstat -at</p>
<p>3、列出所有 udp 端口 #netstat -au</p>
<p>4、只显示监听端口 #netstat -l</p>
<p>5、只列出所有监听 tcp 端口 #netstat -lt</p>
<p>6、只列出所有监听 udp 端口 #netstat -lu</p>
<p>7、列出所有监听 UNIX 端口 #netstat -lx</p>
<p>8、显示所有端口的统计信息 #netstat -s</p>
<p>9、显示 TCP 或 UDP 端口的统计信息 #netstat -st 或 -su</p>
<p>10、 输出中显示 PID 和进程名称 #netstat -p</p>
<p>11、netstat 输出中不显示主机，端口和用户名 (host, port or user)</p>
<p>当你不想让主机，端口和用户名显示，使用 netstat -n。将会使用数字代替那些名称。</p>
<p>同样可以加速输出，因为不用进行比对查询。</p>
<h3 id="netstat-an"><span id="netstat-an">netstat -an</span></h3><p>如果只是不想让这三个名称中的一个被显示，使用以下命令</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"># netsat -<span class="selector-tag">a</span> <span class="attr">--numeric-ports</span></span><br><span class="line"># netsat -<span class="selector-tag">a</span> <span class="attr">--numeric-hosts</span></span><br><span class="line"># netsat -<span class="selector-tag">a</span> <span class="attr">--numeric-users</span></span><br></pre></td></tr></table></figure>

<p>12、持续输出 netstat 信息 #netstat -c</p>
<p>13、找出程序运行的端口 #netstat -ap | grep ‘80’</p>
<p>14、查看连接某服务端口最多的的IP地址（前20个）</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="language-bash">netstat -nat | grep <span class="string">&quot;10.1.62.23:443&quot;</span> |awk <span class="string">&#x27;&#123;print $5&#125;&#x27;</span>|awk -F: <span class="string">&#x27;&#123;print $1&#125;&#x27;</span>|<span class="built_in">sort</span>|<span class="built_in">uniq</span> -c|<span class="built_in">sort</span> -nr|<span class="built_in">head</span> -20</span></span><br><span class="line">15、TCP各种状态列表 </span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">netstat -nat |awk <span class="string">&#x27;&#123;print $6&#125;&#x27;</span></span></span><br><span class="line"></span><br><span class="line">统计数量</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">netstat -nat |awk <span class="string">&#x27;&#123;print $6&#125;&#x27;</span>|<span class="built_in">sort</span>|<span class="built_in">uniq</span> -c</span></span><br><span class="line"></span><br><span class="line">排序</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">netstat -nat |awk <span class="string">&#x27;&#123;print $6&#125;&#x27;</span>|<span class="built_in">sort</span>|<span class="built_in">uniq</span> -c|<span class="built_in">sort</span> -rn</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="language-bash">netstat -n | awk <span class="string">&#x27;/^tcp/ &#123;++S[$NF]&#125; END &#123;for(a in S) print a, S[a]&#125;&#x27;</span></span></span><br></pre></td></tr></table></figure>

<p>16、直接统计tcp数量监听的数量</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="language-bash">netstat -ant | <span class="built_in">wc</span> -l</span></span><br></pre></td></tr></table></figure>



<h2 id="10tar命令"><span id="10tar命令">10.tar命令</span></h2><p>tar命令可以为linux的文件和目录创建档案。利用tar，可以为某一特定文件创建档案（备份文件），也可以在档案中改变文件，或者向档案中加入新的文件。</p>
<p>tar最初被用来在磁带上创建档案，现在，用户可以在任何设备上创建档案。利用tar命令，可以把一大堆的文件和目录全部打包成一个文件，这对于备份文件或将几个文件组合成为一个文件以便于网络传输是非常有用的。</p>
<p><strong>语法格式：</strong>tar [参数] [文件或目录]</p>
<p><strong>常用参数：</strong></p>
<table>
<thead>
<tr>
<th>-A</th>
<th>新增文件到以存在的备份文件</th>
</tr>
</thead>
<tbody><tr>
<td>-B</td>
<td>设置区块大小</td>
</tr>
<tr>
<td>-c</td>
<td>建立新的备份文件</td>
</tr>
<tr>
<td>-C &lt;目录&gt;</td>
<td>切换工作目录，先进入指定目录再执行压缩&#x2F;解压缩操作，可用于仅压缩特定目录里的内容或解压缩到特定目录</td>
</tr>
<tr>
<td>-d</td>
<td>记录文件的差别</td>
</tr>
<tr>
<td>-x</td>
<td>从归档文件中提取文件</td>
</tr>
<tr>
<td>-t</td>
<td>列出备份文件的内容</td>
</tr>
<tr>
<td>-z</td>
<td>通过gzip指令压缩&#x2F;解压缩文件，文件名最好为*.tar.gz</td>
</tr>
<tr>
<td>-Z</td>
<td>通过compress指令处理备份文件</td>
</tr>
<tr>
<td>-f&lt;备份文件&gt;</td>
<td>指定备份文件</td>
</tr>
<tr>
<td>-v</td>
<td>显示指令执行过程</td>
</tr>
<tr>
<td>-r</td>
<td>添加文件到已经压缩的文件</td>
</tr>
<tr>
<td>-u</td>
<td>添加改变了和现有的文件到已经存在的压缩文件</td>
</tr>
<tr>
<td>-j</td>
<td>通过bzip2指令压缩&#x2F;解压缩文件，文件名最好为*.tar.bz2</td>
</tr>
<tr>
<td>-v</td>
<td>显示操作过程</td>
</tr>
<tr>
<td>-l</td>
<td>文件系统边界设置</td>
</tr>
<tr>
<td>-k</td>
<td>保留原有文件不覆盖</td>
</tr>
<tr>
<td>-m</td>
<td>保留文件不被覆盖</td>
</tr>
<tr>
<td>-w</td>
<td>确认压缩文件的正确性</td>
</tr>
<tr>
<td>-p</td>
<td>保留原来的文件权限与属性</td>
</tr>
<tr>
<td>-P</td>
<td>使用文件名的绝对路径，不移除文件名称前的“&#x2F;”号</td>
</tr>
<tr>
<td>-N &lt;日期格式&gt;</td>
<td>只将较指定日期更新的文件保存到备份文件里</td>
</tr>
<tr>
<td>– -exclude&#x3D;&lt;范本样式&gt;</td>
<td>排除符合范本样式的文件</td>
</tr>
<tr>
<td>– -remove-files</td>
<td>归档&#x2F;压缩之后删除源文件</td>
</tr>
</tbody></table>
<p><strong>参考实例</strong></p>
<p>将所有.jpg的文件打成一个名为all.tar的包：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@linuxcool ~]# tar -cf all.tar *.jpg</span><br></pre></td></tr></table></figure>

<p>打包文件之后删除源文件：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@linuxcool ~]# tar -cvf linuxcool.tar linuxcool --remove-files</span><br></pre></td></tr></table></figure>

<p>打包文件以后，以 gzip 压缩：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@linuxcool ~]# tar -zcvf log.tar.gz linuxcool.log</span><br></pre></td></tr></table></figure>



<h2 id="11passwd命令"><span id="11passwd命令">11.passwd命令</span></h2><p>passwd命令用于设置用户的认证信息，包括用户密码、账户锁定、密码失效等。直接运行passwd命令修改当前的用户密码，对其他用户的密码操作需要管理员权限。</p>
<p><strong>常用格式：</strong>passwd [参数]</p>
<h3 id="常用参数"><span id="常用参数"><strong>常用参数</strong>：</span></h3><table>
<thead>
<tr>
<th>-d</th>
<th>删除密码</th>
</tr>
</thead>
<tbody><tr>
<td>-l</td>
<td>锁定用户密码，无法被用户自行修改</td>
</tr>
<tr>
<td>-u</td>
<td>解开已锁定用户密码，允许用户自行修改</td>
</tr>
<tr>
<td>-e</td>
<td>密码立即过期，下次登陆强制修改密码</td>
</tr>
<tr>
<td>-k</td>
<td>保留即将过期的用户在期满后能仍能使用</td>
</tr>
<tr>
<td>-S</td>
<td>查询密码状态</td>
</tr>
</tbody></table>
<h3 id="参考实例"><span id="参考实例">参考实例</span></h3><p>修改当前登陆的账户密码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@linuxcool ~]# passwd</span><br></pre></td></tr></table></figure>

<p>修改其他用户密码(假设有linuxprobe用户)：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@linuxcool ~]# passwd linuxcool</span><br></pre></td></tr></table></figure>

<p>锁定密码不允许用户修改：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@linuxcool ~]# passwd -l linuxcool</span><br></pre></td></tr></table></figure>

<p>解除锁定密码，允许用户修改：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@linuxcool ~]# passwd -u linuxcool</span><br></pre></td></tr></table></figure>

<p>下次登陆强制改密码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@linuxcool ~]# passwd -e linuxcool</span><br></pre></td></tr></table></figure>

<p>清除登录密码。清除之后登录时无需密码，风险极大，不推荐使用：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@linuxcool ~]# passwd -d linuxcool</span><br></pre></td></tr></table></figure>

<p>查询密码状态：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@linuxcool ~]# passwd -S linuxcool</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>linux的基本知识（一）</title>
    <url>/2022/03/12/linux%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86%20%EF%BC%88%E4%B8%80%EF%BC%89/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="1linux下查看主机名及配置主机名"><span id="1linux下查看主机名及配置主机名">1.linux下查看主机名及配置主机名</span></h3><p>1.在linux在查看主机名</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hostname	</span><br><span class="line">hostname -f //显示完整的内容</span><br></pre></td></tr></table></figure>

<p>2.设置主机名</p>
<ul>
<li><p>可以直接使用hostname命令修改，重启后失效</p>
</li>
<li><p>修改后需要编辑&#x2F;etx&#x2F;sysconfig&#x2F;network才会永久生效</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hostname dewfwwf</span><br><span class="line">vim /etc/sysconfig/network</span><br><span class="line">------------------------------------------</span><br><span class="line">NETWORKING=yes</span><br><span class="line"></span><br><span class="line">HOSTNAME=dewfwwf</span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="2linux上ip地址配置"><span id="2linux上ip地址配置">2.linux上IP地址配置</span></h3><p>1.使用ifcongfig进行查看IP地址（windows上使用的是ipconfig不要记错了）</p>
<p>2.可以直接通过ifconfig来修改IP地址，<strong>修改 &#x2F;etc&#x2F;sysconfig&#x2F;network-scripts&#x2F;ifcfg-eth0文件</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ifconfig eth0 192.168.12.22 修改ip地址</span><br><span class="line">如果想要永久生效</span><br><span class="line">修改 /etc/sysconfig/network-scripts/ifcfg-eth0文件</span><br><span class="line">DEVICE=eth0 #网卡名称</span><br><span class="line">BOOTPROTO=static #获取ip的方式(static/dhcp/bootp/none)</span><br><span class="line">HWADDR=00:0C:29:B5:B2:69 #MAC地址</span><br><span class="line">IPADDR=12.168.177.129 #IP地址</span><br><span class="line">NETMASK=255.255.255.0 #子网掩码</span><br><span class="line">NETWORK=192.168.177.0 #网络地址</span><br><span class="line">BROADCAST=192.168.0.255 #广播地址</span><br><span class="line">NBOOT=yes #  系统启动时是否设置此网络接口，设置为yes时，系统启动时激活此设备。</span><br></pre></td></tr></table></figure>

<p><img src="https://s2.loli.net/2022/03/12/BF9JnvtWYClPjcx.png" alt="image-20220312141904769"></p>
<h3 id="3域名映射"><span id="3域名映射">3.域名映射</span></h3><p>&#x2F;etc&#x2F;hosts文件用以在通过主机名进行访问时做ip地址解析之用，相当于window中的C:\Windows\System32\drivers\etc\hosts文件的功能<img src="https://s2.loli.net/2022/03/12/YZEHa5tnmdSiu9T.png" alt="image-20220312143648646"></p>
<h3 id="4网络服务管理"><span id="4网络服务管理">4.网络服务管理</span></h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">service network status 查看指定服务的状态</span><br><span class="line">service network stop 停止指定服务</span><br><span class="line">service network start 启动指定服务</span><br><span class="line">service network restart 重启指定服务</span><br><span class="line"></span><br><span class="line">service --status–all 查看系统中所有后台服务</span><br><span class="line">netstat –nltp 查看系统中网络进程的端口监听情况</span><br><span class="line"></span><br><span class="line">防火墙设置</span><br><span class="line">防火墙根据配置文件/etc/sysconfig/iptables来控制本机的”出”、”入”网络访问行为。</span><br><span class="line">service iptables status 查看防火墙状态</span><br><span class="line">service iptables stop 关闭防火墙</span><br><span class="line">service iptables start 启动防火墙</span><br><span class="line">chkconfig  iptables off 禁止防火墙自启</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h3 id="5linux上安装软件"><span id="5linux上安装软件">5.linux上安装软件</span></h3><h4 id="一-rpm包安装方式步骤"><span id="一-rpm包安装方式步骤">一、rpm包安装方式步骤：</span></h4><p>1、找到相应的软件包，比如soft.<a href="https://so.csdn.net/so/search?q=version&spm=1001.2101.3001.7020">version</a>.rpm，下载到本机某个目录； </p>
<p>2、打开一个终端，su -成<a href="https://so.csdn.net/so/search?q=root&spm=1001.2101.3001.7020">root</a>用户； </p>
<p>3、cd soft.version.<a href="https://so.csdn.net/so/search?q=rpm&spm=1001.2101.3001.7020">rpm</a>所在的目录； </p>
<p>4、输入rpm -ivh soft.version.rpm</p>
<p>*<strong>*详细介绍：*</strong></p>
<ol>
<li>安装：<br>　　我只需简单的一句话，就可以说完。执行：<br>   　　rpm –ivh rpm的软件包名<br>   　  更高级的，请见下表：<br>   　　rpm参数 参数说明<br>   　　-i 安装软件<br>   　　-t 测试安装，不是真的安装<br>   　　-p 显示安装进度<br>   　　-f 忽略任何错误<br>   　　-U 升级安装<br>   　　-v 检测套件是否正确安装<br>   　　这些参数可以同时采用。更多的内容可以参考RPM的命令帮助。<ol start="2">
<li>卸载：<br>　　我同样只需简单的一句话，就可以说完。执行：<br>   　　rpm –e 软件名<br>   　　不过要注意的是，后面使用的是软件名，而不是软件包名。例如，要安装software-1.2.3-1.i386.rpm这个包时，应执行：<br>   　　rpm –ivh software-1.2.3-1.i386.rpm<br>   　　而当卸载时，则应执行：<br>   　　rpm –e software。<br>另外，在<a href="https://so.csdn.net/so/search?q=Linux&spm=1001.2101.3001.7020">Linux</a>中还提供了象GnoRPM、kpackage等图形化的RPM工具，使得整个过程会更加简单。</li>
</ol>
</li>
</ol>
<h4 id="二-deb包安装方式步骤"><span id="二-deb包安装方式步骤">二、deb包安装方式步骤：</span></h4><p>1、找到相应的软件包，比如soft.version.deb，下载到本机某个目录； </p>
<p>2、打开一个终端，su -成root用户； </p>
<p>3、cd soft.version.deb所在的目录； </p>
<p>4、输入dpkg -i soft.version.deb</p>
<p><em><strong>*详细介绍：*</strong></em><br>    这是Debian Linux提供的一个包管理器，它与RPM十分类似。</p>
<p>​    但由于RPM出现得更早，所以在各种版本的Linux都常见到。</p>
<p>​    而debian的包管理器dpkg则只出现在Debina Linux中，其它Linux版本一般都没有。<br>　　1. 安装<br>　  dpkg –i deb的软件包名<br>　  　  　  　　如：dpkg –i software-1.2.3-1.deb<br>　　2. 卸载<br>　　 dpkg –e 软件名<br>　　 　　 　　 　　如：dpkg –e software</p>
<p>​       3.查询：查询当前系统安装的软件包：</p>
<p>​    dpkg –l ‘<em>软件包名</em>’</p>
<p>​    如：dpkg –l ‘<em>software</em>‘</p>
<h4 id="三-targz源代码包安装方式"><span id="三-targz源代码包安装方式">三、tar.gz源代码包安装方式：</span></h4><p>1、找到相应的软件包，比如soft.tar.gz，下载到本机某个目录； </p>
<p>2、打开一个终端，su -成root用户； </p>
<p>3、cd soft.tar.gz所在的目录； </p>
<p>4、tar -xzvf soft.tar.gz &#x2F;&#x2F;一般会生成一个soft目录 </p>
<p>5、cd soft </p>
<p>6、.&#x2F;configure </p>
<p>7、make </p>
<p>8、make install</p>
<p><em><strong>*详细介绍：*</strong></em></p>
<ol>
<li>安装：<br>　　整个安装过程可以分为以下几步：<br>   　　1） 取得应用软件：通过下载、购买光盘的方法获得；<br>   　　2）解压缩文件：一般tar包，都会再做一次压缩，如gzip、bz2等，所以你需要先解压。如果是最常见的gz格式，则可以执行：“tar –xvzf 软件包名”，就可以一步完成解压与解包工作。如果不是，则先用解压软件，再执行“tar –xvf 解压后的tar包”进行解包；<br>   　　3） 阅读附带的INSTALL文件、README文件；<br>   　　4） 执行“.&#x2F;configure”命令为编译做好准备；<br>   　　5） 执行“make”命令进行软件编译；<br>   　　6） 执行“make install”完成安装；<br>   　　7） 执行“make clean”删除安装时产生的临时文件。<br>   　　好了，到此大功告成。我们就可以运行应用程序了。但这时，有的读者就会问，我怎么执行呢？这也是一个Linux特色的问题。其实，一般来说， Linux的应用软件的可执行文件会存放在&#x2F;usr&#x2F;local&#x2F;bin目录下！不过这并不是“放四海皆准”的真理，最可靠的还是看这个软件的 INSTALL和README文件，一般都会有说明。<ol start="2">
<li>卸载：<br>　　通常软件的开发者很少考虑到如何卸载自己的软件，而tar又仅是完成打包的工作，所以并没有提供良好的卸载方法。<br>   　　那么是不是说就不能够卸载呢！其实也不是，有两个软件能够解决这个问题，那就是Kinstall和Kife，它们是tar包安装、卸载的黄金搭档。</li>
</ol>
</li>
</ol>
<h4 id="四-tarbz2源代码包安装方式"><span id="四-tarbz2源代码包安装方式">四、tar.bz2源代码包安装方式：</span></h4><p>1、找到相应的软件包，比如soft.tar.bz2，下载到本机某个目录； </p>
<p>2、打开一个终端，su -成root用户； </p>
<p>3、cd soft.tar.bz2所在的目录； </p>
<p>4、tar -xjvf soft.tar.bz2 &#x2F;&#x2F;一般会生成一个soft目录 </p>
<p>5、cd soft </p>
<p>6、.&#x2F;configure </p>
<p>7、make </p>
<p>8、make install </p>
<h4 id="五-apt方式安装安装deb包"><span id="五-apt方式安装安装deb包">五、apt方式安装：（安装deb包）</span></h4><p>1、打开一个终端，su -成root用户； </p>
<p>2、apt-cache search soft 注：soft是你要找的软件的名称或相关信息 </p>
<p>3、如果2中找到了软件soft.version，则用apt-get install soft.version命令安装软件</p>
<p>注：只要你可以上网，只需要用apt-cache search查找软件，用apt-get install软件<br><em><strong>*详细介绍：*</strong></em></p>
<p>apt-get是debian，ubuntu发行版的包管理工具，与红帽中的yum工具非常类似。</p>
<p>apt-get命令一般需要<a href="http://baike.baidu.com/view/3967294.htm">root权限</a>执行，所以一般跟着sudo命令例sudo apt-get xxxx</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">apt-get install packagename——安装一个新软件包（参见下文的aptitude）</span><br><span class="line">apt-get remove packagename——卸载一个已安装的软件包（保留配置文件）</span><br><span class="line">apt-get --purge remove packagename——卸载一个已安装的软件包（删除配置文件）</span><br><span class="line">dpkg --force-all --purge packagename ——有些软件很难卸载，而且还阻止了别的软件的应用，就可以用这个，不过有点冒险。</span><br><span class="line">apt-get autoremove——因为apt会把已装或已卸的软件都备份在硬盘上，所以如果需要空间的话，可以让这个命令来删除你已经删掉的软件。</span><br><span class="line">apt-get autoclean——定期运行这个命令来清除那些已经卸载的软件包的.deb文件。通过这种方式，可以释放大量的磁盘空间。如果需求十分迫切，可以使用apt-get clean以释放更多空间。这个命令会将已安装软件包裹的.deb文件一并删除。</span><br><span class="line">apt-get clean——这个命令会把安装的软件的备份也删除，不过这样不会影响软件的使用的。</span><br><span class="line">apt-get upgrade——更新所有已安装的软件包</span><br><span class="line">apt-get dist-upgrade——将系统升级到新版本</span><br><span class="line">apt-cache search string——在软件包列表中搜索字符串</span><br><span class="line">apt-cache showpkg pkgs——显示软件包信息。</span><br><span class="line">apt-cache stats——查看库里有多少软件</span><br><span class="line">apt-cache dumpavail——打印可用软件包列表。</span><br><span class="line">apt-cache show pkgs——显示软件包记录，类似于dpkg –print-avail。</span><br><span class="line">apt-cache pkgnames——打印软件包列表中所有软件包的名称</span><br><span class="line">（需要定期运行这一命令以确保您的软件包列表是最新的）</span><br><span class="line">简单的说： dpkg只能安装已经下载到本地机器上的deb包. apt-get能在线下载并安装deb包,能更新系统,</span><br><span class="line">且还能自动处理包与包之间的依赖问题,这个是dpkg工具所不具备的。</span><br></pre></td></tr></table></figure>

<h4 id="六-yum方式安装安装rpm包"><span id="六-yum方式安装安装rpm包">六、yum方式安装：(安装rpm包)</span></h4><p>rpm 是linux的一种软件包名称，以.rmp结尾，安装的时候语法为：rpm -ivh。<br>rpm包的安装有个很大的缺点就是文件的关联性太大，有时装一个软件要安装很多其他的软件包，很麻烦。<br>所以为此RedHat小红帽开发了yum安装方法，他可以彻底解决这个关联性的问题，很方便，只要配置两个文件即可安装，安装方法是：yum -y install 。<br>yum并不是一中包，而是安装包的软件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">简单的说： rpm 只能安装已经下载到本地机器上的rpm 包. yum能在线下载并安装rpm包,能更新系统,</span><br><span class="line">且还能自动处理包与包之间的依赖问题,这个是rpm 工具所不具备的。</span><br></pre></td></tr></table></figure>



<h4 id="七-bin文件安装"><span id="七-bin文件安装">七、bin文件安装：</span></h4><p>如果你下载到的软件名是soft.bin，一般情况下是个可执行文件，安装方法如下： </p>
<p>1、打开一个终端，su -成root用户； </p>
<p>2、chmod +x soft.bin </p>
<p>3、.&#x2F;soft.bin &#x2F;&#x2F;运行这个命令就可以安装软件了 </p>
<p>八、不需要安装的软件：<br>有了些软件，比如lumaqq，是不需要安装的，自带jre解压缩后可直接运行。假设 </p>
<p>下载的是lumaqq.tar.gz，使用方法如下： </p>
<p>1、打开一个终端，su -成root用户； </p>
<p>2、tar -xzvf lumaqq.tar.gz &#x2F;&#x2F;这一步会生成一个叫LumaQQ的目录 </p>
<p>3、cd LumaQQ </p>
<p>4、chmod +x lumaqq &#x2F;&#x2F;设置lumaqq这个程序文件为可运行 </p>
<p>5、此时就可以运行lumaqq了，用命令.&#x2F;lumaqq即可，但每次运行要输入全路径或 </p>
<p>切换到刚才生成的LumaQQ目录里 </p>
<p>6、为了保证不设置路径就可以用，你可以在&#x2F;bin目录下建立一个lumaqq的链接， </p>
<p>用命令ln -s lumaqq &#x2F;bin&#x2F; 即可，以后任何时候打开一个终端输入lumaqq就可以 </p>
<p>启动QQ聊天软件了 </p>
<p>7、 如果你要想lumaqq有个菜单项，使用菜单编辑工具，比如Alacarte Menu </p>
<p>Editor，找到上面生成的LumaQQ目录里的lumaqq设置一个菜单项就可以了，当然你 </p>
<p>也可以直接到 &#x2F;usr&#x2F;share&#x2F;applications目录，按照里面其它*.desktop文件的格 </p>
<p>式生成一个自己的desktop文件即可。</p>
<h3 id="6上传与下载工具介"><span id="6上传与下载工具介">6.上传与下载工具介</span></h3><h5 id="1lrzsz"><span id="1lrzsz">1.lrzsz</span></h5><p>我们可以使用yum安装方式安装 yum install lrzsz</p>
<p>注意：必须有网络</p>
<p>可以在crt中设置上传与下载目录</p>
<p>​    <img src="https://s2.loli.net/2022/03/12/ljboNXBi84VUw6T.png" alt="image-20220312152445069">                                                                                         </p>
<p>上传文件：rz命令，从本机上传到远程的linux服务器</p>
<p><img src="https://s2.loli.net/2022/03/12/gerYwAua34VyX9n.png" alt="image-20220312152600327"></p>
<p>下载文件：sz命令，从linux远程服务器下载文件到本机</p>
<p><img src="https://s2.loli.net/2022/03/12/fjEMR1ZuxWYvtPK.png" alt="image-20220312152733050"></p>
<h5 id="2sftp"><span id="2sftp">2.sftp</span></h5><p>使用alt + p 组合键打开sftp窗口</p>
<p>1.使用put 命令上传</p>
<p><img src="https://s2.loli.net/2022/03/12/gZaw9HI57Vem3nc.png" alt="image-20220312153211256"></p>
<p>2.使用get命令下载</p>
<p><img src="https://s2.loli.net/2022/03/12/fjHJlEgW9ixueFw.png" alt="image-20220312153229729"></p>
<h3 id="7linux-系统目录结构"><span id="7linux-系统目录结构">7.Linux 系统目录结构</span></h3><p>登录系统后，在当前命令窗口下输入命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ls / </span><br></pre></td></tr></table></figure>

<p>你会看到如下图所示:</p>
<p><img src="https://s2.loli.net/2022/03/12/bnjymeNPFLfEvTz.png" alt="img"></p>
<p>树状目录结构：</p>
<p><img src="https://s2.loli.net/2022/03/12/FA2Lp4lzTCBiHGa.jpg" alt="img"></p>
<p>以下是对这些目录的解释：</p>
<ul>
<li><p><strong>&#x2F;bin</strong>：<br>bin 是 Binaries (二进制文件) 的缩写, 这个目录存放着最经常使用的命令。</p>
</li>
<li><p><strong>&#x2F;boot：</strong><br>这里存放的是启动 Linux 时使用的一些核心文件，包括一些连接文件以及镜像文件。</p>
</li>
<li><p><strong>&#x2F;dev ：</strong><br>dev 是 Device(设备) 的缩写, 该目录下存放的是 Linux 的外部设备，在 Linux 中访问设备的方式和访问文件的方式是相同的。</p>
</li>
<li><p><strong>&#x2F;etc：</strong><br>etc 是 Etcetera(等等) 的缩写,这个目录用来存放所有的系统管理所需要的配置文件和子目录。</p>
</li>
<li><p><strong>&#x2F;home</strong>：<br>用户的主目录，在 Linux 中，每个用户都有一个自己的目录，一般该目录名是以用户的账号命名的，如上图中的 alice、bob 和 eve。</p>
</li>
<li><p><strong>&#x2F;lib</strong>：<br>lib 是 Library(库) 的缩写这个目录里存放着系统最基本的动态连接共享库，其作用类似于 Windows 里的 DLL 文件。几乎所有的应用程序都需要用到这些共享库。</p>
</li>
<li><p><strong>&#x2F;lost+found</strong>：<br>这个目录一般情况下是空的，当系统非法关机后，这里就存放了一些文件。</p>
</li>
<li><p><strong>&#x2F;media</strong>：<br>linux 系统会自动识别一些设备，例如U盘、光驱等等，当识别后，Linux 会把识别的设备挂载到这个目录下。</p>
</li>
<li><p><strong>&#x2F;mnt</strong>：<br>系统提供该目录是为了让用户临时挂载别的文件系统的，我们可以将光驱挂载在 &#x2F;mnt&#x2F; 上，然后进入该目录就可以查看光驱里的内容了。</p>
</li>
<li><p><strong>&#x2F;opt</strong>：<br>opt 是 optional(可选) 的缩写，这是给主机额外安装软件所摆放的目录。比如你安装一个ORACLE数据库则就可以放到这个目录下。默认是空的。</p>
</li>
<li><p><strong>&#x2F;proc</strong>：<br>proc 是 Processes(进程) 的缩写，&#x2F;proc 是一种伪文件系统（也即虚拟文件系统），存储的是当前内核运行状态的一系列特殊文件，这个目录是一个虚拟的目录，它是系统内存的映射，我们可以通过直接访问这个目录来获取系统信息。<br>这个目录的内容不在硬盘上而是在内存里，我们也可以直接修改里面的某些文件，比如可以通过下面的命令来屏蔽主机的ping命令，使别人无法ping你的机器：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo 1 &gt; /proc/sys/net/ipv4/icmp_echo_ignore_all</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>&#x2F;root</strong>：<br>该目录为系统管理员，也称作超级权限者的用户主目录。</p>
</li>
<li><p><strong>&#x2F;sbin</strong>：<br>s 就是 Super User 的意思，是 Superuser Binaries (超级用户的二进制文件) 的缩写，这里存放的是系统管理员使用的系统管理程序。</p>
</li>
<li><p><strong>&#x2F;selinux</strong>：<br> 这个目录是 Redhat&#x2F;CentOS 所特有的目录，Selinux 是一个安全机制，类似于 windows 的防火墙，但是这套机制比较复杂，这个目录就是存放selinux相关的文件的。</p>
</li>
<li><p><strong>&#x2F;srv</strong>：<br> 该目录存放一些服务启动之后需要提取的数据。</p>
</li>
<li><p><strong>&#x2F;sys</strong>：</p>
<p>这是 Linux2.6 内核的一个很大的变化。该目录下安装了 2.6 内核中新出现的一个文件系统 sysfs 。</p>
<p>sysfs 文件系统集成了下面3种文件系统的信息：针对进程信息的 proc 文件系统、针对设备的 devfs 文件系统以及针对伪终端的 devpts 文件系统。</p>
<p>该文件系统是内核设备树的一个直观反映。</p>
<p>当一个内核对象被创建的时候，对应的文件和目录也在内核对象子系统中被创建。</p>
</li>
<li><p><strong>&#x2F;tmp</strong>：<br>tmp 是 temporary(临时) 的缩写这个目录是用来存放一些临时文件的。</p>
</li>
<li><p><strong>&#x2F;usr</strong>：<br> usr 是 unix shared resources(共享资源) 的缩写，这是一个非常重要的目录，<strong>用户的很多应用程序和文件都放在这个目录下</strong>，类似于 windows 下的 program files 目录，<strong>用户自己安装软件的地方</strong>。</p>
</li>
<li><p><strong>&#x2F;usr&#x2F;bin：</strong><br>系统用户使用的应用程序。</p>
</li>
<li><p><strong>&#x2F;usr&#x2F;sbin：</strong><br>超级用户使用的比较高级的管理程序和系统守护程序。</p>
</li>
<li><p><strong>&#x2F;usr&#x2F;src：</strong><br>内核源代码默认的放置目录。</p>
</li>
<li><p><strong>&#x2F;var</strong>：<br>var 是 variable(变量) 的缩写，这个目录中存放着在不断扩充着的东西，我们习惯将那些经常被修改的目录放在这个目录下。包括各种日志文件。</p>
</li>
<li><p><strong>&#x2F;run</strong>：<br>是一个临时文件系统，存储系统启动以来的信息。当系统重启时，这个目录下的文件应该被删掉或清除。如果你的系统上有 &#x2F;var&#x2F;run 目录，应该让它指向 run。</p>
</li>
</ul>
<p>在 Linux 系统中，有几个目录是比较重要的，平时需要注意不要误删除或者随意更改内部文件。</p>
<p><strong>&#x2F;etc</strong>： 上边也提到了，这个是系统中的配置文件，如果你更改了该目录下的某个文件可能会导致系统不能启动。</p>
<p><strong>&#x2F;bin, &#x2F;sbin, &#x2F;usr&#x2F;bin, &#x2F;usr&#x2F;sbin</strong>: 这是系统预设的执行文件的放置目录，比如 <strong>ls</strong> 就是在 <strong>&#x2F;bin&#x2F;ls</strong> 目录下的。</p>
<p>值得提出的是 <strong>&#x2F;bin</strong>、**&#x2F;usr&#x2F;bin** 是给系统用户使用的指令（除 root 外的通用用户），而&#x2F;sbin, &#x2F;usr&#x2F;sbin 则是给 root 使用的指令。</p>
<p><strong>&#x2F;var</strong>： 这是一个非常重要的目录，系统上跑了很多程序，那么每个程序都会有相应的日志产生，而这些日志就被记录到这个目录下，具体在 &#x2F;var&#x2F;log 目录下，另外 mail 的预设放置也是在这里。</p>
<h3 id="8linux的打包tar和压缩命令"><span id="8linux的打包tar和压缩命令">8.linux的打包tar和压缩命令</span></h3><p>打包跟压缩的区别：</p>
<p><strong>打包是指将多个文件或者目录放在一起，形成一个总的包</strong>，这样便于保存和传输，但是大小是没有变化的，<strong>压缩是指将一个或者多个大文件或者目录通过压缩算法使文件的体积变小以达到压缩的目的</strong>，可以节省存储空间，在压缩的时候通常是先打包再压缩；</p>
<h4 id="1tar命令"><span id="1tar命令">1.tar命令</span></h4><p>tar命令参数前面加”-“与不加“-”的区别：</p>
<p>tar命令参数前面加不加“-”执行命令的结果是没有区别的，区别只要是在于linux风格方面，加“-”属于System V风格，不加“-”属于BSD风格，所以在使用tar命令的时候它的参数加不加“-”结果是一样的，看个人的使用方式；</p>
<p><strong>语法格式：</strong>tar [参数] [文件或目录]</p>
<p><strong>常用参数：</strong></p>
<table>
<thead>
<tr>
<th>-A</th>
<th>新增文件到以存在的备份文件</th>
</tr>
</thead>
<tbody><tr>
<td>-B</td>
<td>设置区块大小</td>
</tr>
<tr>
<td>-c</td>
<td>建立新的备份文件</td>
</tr>
<tr>
<td>-C &lt;目录&gt;</td>
<td>切换工作目录，先进入指定目录再执行压缩&#x2F;解压缩操作，可用于仅压缩特定目录里的内容或解压缩到特定目录</td>
</tr>
<tr>
<td>-d</td>
<td>记录文件的差别</td>
</tr>
<tr>
<td>-x</td>
<td>从归档文件中提取文件</td>
</tr>
<tr>
<td>-t</td>
<td>列出备份文件的内容</td>
</tr>
<tr>
<td>-z</td>
<td>通过gzip指令压缩&#x2F;解压缩文件，文件名最好为*.tar.gz</td>
</tr>
<tr>
<td>-Z</td>
<td>通过compress指令处理备份文件</td>
</tr>
<tr>
<td>-f&lt;备份文件&gt;</td>
<td>指定备份文件</td>
</tr>
<tr>
<td>-v</td>
<td>显示指令执行过程</td>
</tr>
<tr>
<td>-r</td>
<td>添加文件到已经压缩的文件</td>
</tr>
<tr>
<td>-u</td>
<td>添加改变了和现有的文件到已经存在的压缩文件</td>
</tr>
<tr>
<td>-j</td>
<td>通过bzip2指令压缩&#x2F;解压缩文件，文件名最好为*.tar.bz2</td>
</tr>
<tr>
<td>-v</td>
<td>显示操作过程</td>
</tr>
<tr>
<td>-l</td>
<td>文件系统边界设置</td>
</tr>
<tr>
<td>-k</td>
<td>保留原有文件不覆盖</td>
</tr>
<tr>
<td>-m</td>
<td>保留文件不被覆盖</td>
</tr>
<tr>
<td>-w</td>
<td>确认压缩文件的正确性</td>
</tr>
<tr>
<td>-p</td>
<td>保留原来的文件权限与属性</td>
</tr>
<tr>
<td>-P</td>
<td>使用文件名的绝对路径，不移除文件名称前的“&#x2F;”号</td>
</tr>
<tr>
<td>-N &lt;日期格式&gt;</td>
<td>只将较指定日期更新的文件保存到备份文件里</td>
</tr>
<tr>
<td>– -exclude&#x3D;&lt;范本样式&gt;</td>
<td>排除符合范本样式的文件</td>
</tr>
<tr>
<td>– -remove-files</td>
<td>归档&#x2F;压缩之后删除源文件</td>
</tr>
</tbody></table>
<p>&#x3D;&#x3D;使用文件名，在f后面要接压缩后的文件的名字，只要用到tar命令，-f选项是必须要用的，-f参数在使用的时候一定排在其他参数的后面，在最右边&#x3D;&#x3D;</p>
<p>将所有.jpg的文件打成一个名为all.tar的包：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@linuxcool ~]# tar -cf all.tar *.jpg</span><br></pre></td></tr></table></figure>

<p>打包文件之后删除源文件：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@linuxcool ~]# tar -cvf linuxcool.tar linuxcool --remove-files</span><br></pre></td></tr></table></figure>

<p>打包文件以后，以 gzip 压缩：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@linuxcool ~]# tar -zcvf log.tar.gz linuxcool.log</span><br></pre></td></tr></table></figure>

<p><img src="https://s2.loli.net/2022/03/12/QHzJIsOfoStL3Xw.png" alt="image-20220312233310714"></p>
<h4 id="2压缩"><span id="2压缩"><strong>2.压缩</strong></span></h4><p>linux主要有三种压缩方式：<br>1.gzip：是公认的压缩这速度最快，压缩大文件的时候与其他的压缩方式相比更加明显，历史最久，应用最广泛的压缩方式<br>2.bzip：压缩形成的文件小，但是可用性不如gzip<br>3.xz：是最新的压缩方式，可以自动提供最佳的压缩率</p>
<p>建议的压缩的时候标明后缀：</p>
<p><img src="https://s2.loli.net/2022/03/12/PswocXSZM2zub15.png" alt="image-20220312234503832"></p>
<p><img src="https://s2.loli.net/2022/03/12/yj4vW8hOAKnclEM.png" alt="image-20220312234531786"></p>
<p><img src="https://s2.loli.net/2022/03/12/LnmRbVj3Sy4aX95.png" alt="image-20220312234609691"></p>
<h4 id="3解压"><span id="3解压"><em>3.解压</em></span></h4><p>在解压gz压缩方式<a href="https://so.csdn.net/so/search?q=%E5%8E%8B%E7%BC%A9%E6%96%87%E4%BB%B6&spm=1001.2101.3001.7020">压缩文件</a>的时候并不需要加上-z，直接用参数-xf即可，另外两种压缩方式在解压的时候一样，因为tar命令会自动选择，解压之后压缩文件还在，如果不指定解压出来的文件保存在哪里，那么会直接解压在当前目录</p>
<p><img src="https://s2.loli.net/2022/03/12/fClyR4zXjrQa1SL.png" alt="img"></p>
<p>补充：<br>a.在打包和压缩的过程中，我们有时候会看到这样的语句：tar: 从成员名中删除开头的“&#x2F;”，这个并不是报错，是因为没有加上-P选项，没有保留原来的绝对路径去打包或者压缩，提取打包的内容跟解压一样，下面举一个例子：</p>
<p>将&#x2F;root&#x2F;目录以gzip的方式压缩为root.tar.gz压缩文件：</p>
<p>1.没有加-P选项：</p>
<p><img src="https://s2.loli.net/2022/03/12/ElRrBb7dKG1Qcq8.png" alt="img"></p>
<p>2.加上-P选项：</p>
<p><img src="https://s2.loli.net/2022/03/12/o2KUYBhVZcAI4rM.png" alt="img"></p>
<p>解压的时候同理，如果在压缩文件的时候使用了-P选项，那么在解压的时候也要加上-P选项，不然也会出现”tar: 从成员名中删除开头的“&#x2F;”“，如下图：</p>
<p>1.不加-P选项解压使用了-P选项压缩&#x2F;root&#x2F;后的root.tar.gz文件：</p>
<p><img src="https://s2.loli.net/2022/03/12/RvF8G35HhSTeCzq.png" alt="img"></p>
<p>2.加上-P选项解压使用了-P选项压缩&#x2F;root&#x2F;后的root.tar.gz文件：</p>
<p><img src="https://s2.loli.net/2022/03/12/RvF8G35HhSTeCzq.png"></p>
<p><strong>b.在使用tar压缩或者打包的时候，可以通过增加–exclude来达到排除指定的文件的目的</strong></p>
<p>将&#x2F;root&#x2F;目录下的harry目录打包，但是不打包harry目录下的ha.txt文件，如下图：</p>
<p><img src="https://s2.loli.net/2022/03/12/PkCn8iIdstO3F69.png" alt="img"></p>
<p>压缩文件也是同理，想要排除指定的目录压缩或者打包也是同理</p>
<h4 id="4zip命令"><span id="4zip命令"><strong>4.zip命令</strong></span></h4><p>基本用法：</p>
<p>zip [参数] [压缩包名] [压缩的目录或者文件的路径]</p>
<h5 id="常用参数"><span id="常用参数">常用参数：</span></h5><p><img src="https://s2.loli.net/2022/03/12/mkqjl6F7IDCSVgU.png" alt="image-20220312235408640"></p>
<h5 id="实例"><span id="实例">实例：</span></h5><p>a.压缩目录，将&#x2F;root&#x2F;目录下的harry目录压缩为名为harry.zip压缩包：</p>
<p>1.正常压缩，不加-q选项，显示压缩的过程：</p>
<p><img src="https://s2.loli.net/2022/03/12/wQyuCLDiqcpJaks.png" alt="img"></p>
<p>2.加上-q选项，安静模式输出，不显示压缩的过程：</p>
<p><img src="https://s2.loli.net/2022/03/12/Wfakm9ryO8EundQ.png" alt="img"></p>
<p>b.压缩多个文件，将&#x2F;root&#x2F;目录下的ceshi.txt文件和anaconda-ks.cfg文件和Golden.apk文件压缩为名为jihe.zip的压缩包：</p>
<p><strong>因为压缩的全是文件，所以可以不用加上-r选项</strong></p>
<p><img src="https://s2.loli.net/2022/03/12/GThxu4BLRvP1b5N.png" alt="img"></p>
<p>c.压缩文件跟目录，将&#x2F;root&#x2F;下的ceshi.txt文件和anaconda-ks.cfg文件和harry目录压缩成名为dajihe.zip的压缩包：</p>
<p><img src="https://s2.loli.net/2022/03/12/sm32U5xJYf6j1Pc.png" alt="img"></p>
<p>d.将&#x2F;root&#x2F;目录下的harry目录压缩为harry1.zip压缩包，排除harry目录下的ha.txt文件：</p>
<p><img src="https://s2.loli.net/2022/03/12/EOu3AseyGLFd6oJ.png" alt="img"></p>
<h4 id="5unzip命令"><span id="5unzip命令">5.unzip命令</span></h4><p>基本用法：</p>
<p>unzip [参数] [压缩文件]  （-d [目录]）  &#x2F;&#x2F;如果不是用括号里面的内容，则解压文件在当前工作目录</p>
<h5 id="常用参数"><span id="常用参数"><strong>常用参数：</strong></span></h5><p><img src="https://s2.loli.net/2022/03/12/hC6fDeBXiwo2ynl.png" alt="image-20220312235709386"></p>
<h5 id="实例"><span id="实例"><strong>实例：</strong></span></h5><p>a.将harry.zip压缩包解压缩的结果显示出来：</p>
<p><img src="https://s2.loli.net/2022/03/12/XhQSxIPW5YLZHyD.png" alt="img"></p>
<p>具体会显示到每一个文件跟每一个文件的内容</p>
<p>b.显示jihe.zip压缩包里面包含的文件</p>
<p><img src="https://s2.loli.net/2022/03/13/YmwDQaEIG3yvqA2.png" alt="img"></p>
<p>c.检查dajihe.zip压缩文件是否正确：</p>
<p><img src="https://s2.loli.net/2022/03/13/QJa7TgycLduUik9.png" alt="img"></p>
<p>全部OK表示全部文件都是正确的</p>
<p>d.不解压压缩文件dajihe.zip，查看压缩包里面的内容（查看显示的文件列表还包含压缩比率）：</p>
<p><img src="https://s2.loli.net/2022/03/13/XIWHGtV2a8YFEhx.png" alt="img"></p>
<p>#使用-v显示的信息比使用-l显示的信息更加详细</p>
<p>e.将dajihe.zip压缩包解压到&#x2F;opt&#x2F;目录下：</p>
<p><img src="https://s2.loli.net/2022/03/13/dviNTsjHcXo9ql4.png"></p>
<p><strong>补充：</strong>使用r选项增加.tar归档文件的内容应该如何怎么操作？</p>
<p>我们先来了解一下tar命令-r选项的作用：</p>
<p><img src="https://s2.loli.net/2022/03/13/8BYUgZmxEpAKXvn.png" alt="img"></p>
<p>通过tar –help命令查看帮助</p>
<p>-r选项的作用：把要存档的文件追加到档案文件的未尾。例如用户已经作好备份文件，又发现还有一个目录或是一些文件忘记备份了，这时可以使用该选项，将忘记的目录或文件追加到备份文件中</p>
<p>使用实例：</p>
<p><img src="https://s2.loli.net/2022/03/13/MCfiy69NZbSW2EO.png" alt="img"></p>
<p>看上图，可以看到我ops用户家目录下标记了一个文件，一个目录，我现在先将目录归档，然后再将文件追加到档案里面</p>
<p>1.归档操作</p>
<p><img src="https://s2.loli.net/2022/03/13/4V1LCqUmI3cd7gX.png" alt="img"></p>
<p>生成.tar文件，目录归档完毕！</p>
<p>2.将calculating_time.sh追加进入.tar文件中</p>
<p><img src="https://s2.loli.net/2022/03/13/Tm584gcVKx3XPSj.png" alt="img"></p>
<p>3.验证</p>
<p>a.查看.tar文件的归档信息</p>
<p><img src="https://s2.loli.net/2022/03/13/btYnUcyBxrZv93f.png" alt="img"></p>
<p><img src="https://s2.loli.net/2022/03/13/G47QJcRxwndEpei.png" alt="img"></p>
<p>可以看到calculating_time.sh文件已经被追加到档案的末尾了</p>
<p>b.提取Check_Configuration_20201118_PM.tar 到&#x2F;mnt目录下</p>
<p><img src="https://s2.loli.net/2022/03/13/walGn9Ft8zoVE3e.png" alt="img"></p>
<p>使用-r选项追加文件至.tar文件成功</p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>中文输入时,使用英文的标点符号</title>
    <url>/2022/03/11/%E4%B8%AD%E6%96%87%E8%BE%93%E5%85%A5%E6%97%B6,%E4%BD%BF%E7%94%A8%E8%8B%B1%E6%96%87%E7%9A%84%E6%A0%87%E7%82%B9%E7%AC%A6%E5%8F%B7/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote>
<p>大家敲代码的时候应该会经常进行中英文的切换吧,大多数人都是采用shift键进行切换的,我发现了win10自带的输入法可以在中文状态下输出英文的标点符号,切换之后可以更加方便使用markdown语法和编写代码的注释</p>
<span id="more"></span>
</blockquote>
<h3 id="切换方式"><span id="切换方式">切换方式</span></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ctrl+.</span><br></pre></td></tr></table></figure>

<p>目前在微软自带的输入法有效,其他输入法自行测试</p>
]]></content>
      <categories>
        <category>小技巧</category>
      </categories>
      <tags>
        <tag>tips</tag>
      </tags>
  </entry>
  <entry>
    <title>了解ip、子网掩码、网关、DNS</title>
    <url>/2022/03/11/%E4%BA%86%E8%A7%A3ip%E3%80%81%E5%AD%90%E7%BD%91%E6%8E%A9%E7%A0%81%E3%80%81%E7%BD%91%E5%85%B3%E3%80%81DNS/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>网络管理中的IP地址、子网掩码和网关是每个网管必须要掌握的基础知识，只有掌握它，才能够真正理解TCP&#x2F;IP协议的设置。以下我们就来深入浅出地讲解什么是子网掩码。</p>
<h4 id="ip地址的结构"><span id="ip地址的结构">IP地址的结构</span></h4><p>要想理解什么是子网掩码，就不能不了解IP地址的构成。互联网是由许多小型网络构成的，每个网络上都有许多主机，这样便构成了一个有层次的结构。IP地址在设计时就考虑到地址分配的层次特点，将每个IP地址都分割成网络号和主机号两部分，以便于IP地址的寻址操作。</p>
<p>IP地址的网络号和主机号各是多少位呢？如果不指定，就不知道哪些位是网络号、哪些是主机号，这就需要通过子网掩码来实现。</p>
<h4 id="什么是子网掩码"><span id="什么是子网掩码">什么是子网掩码</span></h4><p>子网掩码不能单独存在，它必须结合IP地址一起使用。子网掩码只有一个作用，就是将某个IP地址划分成网络地址和主机地址两部分。子网掩码的设定必须遵循一定的规则。与IP地址相同，子网掩码的长度也是32位，左边是网络位，用二进制数字“1”表示；右边是主机位，用二进制数字“0”表示。</p>
<p>“192.168.1.1”和子网掩码为“255.255.255.0”的二进制对照。其中，“1”有24个，代表与此相对应的IP地址左边24位是网络号；“0”有8个，代表与此相对应的IP地址右边8位是主机号。这样，子网掩码就确定了一个IP地址的32位二进制数字中哪些是网络号、哪些是主机号。这对于采用TCP&#x2F;IP协议的网络来说非常重要，只有通过子网掩码，才能表明一台主机所在的子网与其他子网的关系，使网络正常工作。</p>
<p>常用的子网掩码有数百种，这里只介绍最常用的两种子网掩码，它们分别是“255.255.255.0”和“255.255.0.0”。</p>
<p>\1. 子网掩码是“255.255.255.0”的网络：最后面一个数字可以在0~255范围内任意变化，因此可以提供256个IP地址。但是实际可用的IP地址数量是256-2，即254个，因为主机号不能全是“0”或全是“1”。</p>
<p>\2. 子网掩码是“255.255.0.0”的网络：后面两个数字可以在0~255范围内任意变化，可以提供2552个IP地址。但是实际可用的IP地址数量是2552-2，即65023个。</p>
<p>IP地址的子网掩码设置不是任意的。如果将子网掩码设置过大，也就是说子网范围扩大，那么，根据子网寻径规则，很可能发往和本地机不在同一子网内的目的机的数据，会因为错误的判断而认为目的机是在同一子网内，那么，数据包将在本子网内循环，直到超时并抛弃，使数据不能正确到达目的机，导致网络传输错误；如果将子网掩码设置得过小，那么就会将本来属于同一子网内的机器之间的通信当做是跨子网传输，数据包都交给缺省网关处理，这样势必增加缺省网关的负担，造成网络效率下降。因此，子网掩码应该根据网络的规模进行设置。 如果一个网络的规模不超过254台电脑，采用“255.255.255.0”作为子网掩码就可以了，现在大多数局域网都不会超过这个数字，因此“255.255.255.0”是最常用的IP地址子网掩码；笔者见到的最大规模的中小学校园网具有1500多台电脑，这种规模的局域网可以使用“255.255.0.0”。</p>
<p>默认子网掩码 在Windows 2000 Server中，如果给一个网卡指定IP地址，系统会自动填入一个默认的子网掩码。这是Windows 2000 Server为了节省用户输入时间自动产生的子网掩码。比如，局域网最常使用的IP地址“192.168.x.x”默认的子网掩码是“255.255.255.0”。一般情况下，IP地址使用默认子网掩码就可以了。</p>
<h4 id="网关"><span id="网关">网关</span></h4><p>大家都知道，从一个房间走到另一个房间，必然要经过一扇门。同样，从一个网络向另一个网络发送信息，也必须经过一道“关口”，这道关口就是网关。</p>
<p><strong>什么是网关</strong></p>
<p> 顾名思义，<strong>网关</strong>（Gateway）就是一个网络连接到另一个网络的“关口”。 按照不同的分类标准，网关也有很多种。TCP&#x2F;IP协议里的网关是最常用的，在这里我们所讲的“网关”均指TCP&#x2F; IP协议下的网关。</p>
<p>那么网关到底是什么呢？网关实质上是一个网络通向其他网络的IP地址。比如有网络A和网络B，网络A的IP地址范围为“192.168.1.1<del>192. 168.1.254”，子网掩码为255.255.255.0；网络B的IP地址范围为“192.168.2.1</del>192. 168.2.254”，子网掩码为255.255.255.0。在没有路由器的情况下，两个网络之间是不能进行TCP&#x2F;IP通信的，即使是两个网络连接在同一台交换机（或集线器）上，TCP&#x2F;IP协议也会根据子网掩码（255.255.255.0）判定两个网络中的主机处在不同的网络里。而要实现这两个网络之间的通信，则必须通过网关。如果网络A中的主机发现数据包的目的主机不在本地网络中，就把数据包转发给它自己的网关，再由网关转发给网络B的网关，网络B的网关再转发给网络B的某个主机。网络B向网络A转发数据包的过程也是如此。而要实现这两个网络之间的通信，则必须通过网关。如果网络A中的主机发现数据包的目的主机不在本地网络中，就把数据包转发给它自己的网关，再由网关转发给网络B的网关，网络B的网关再转发给网络B的某个主机。网络B向网络A转发数据包的过程也是如此 所以说，只有设置好网关的IP地址，TCP&#x2F;IP协议才能实现不同网络之间的相互通信。那么这个IP地址是哪台机器的IP地址呢？网关的IP地址是具有路由功能的设备的IP地址，具有路由功能的设备有路由器、启用了路由协议的服务器（实质上相当于一台路由器）、代理服务器（也相当于一台路由器）。</p>
<p>什么是<strong>默认网关</strong> ？如果搞清了什么是网关，默认网关也就好理解了。就好像一个房间可以有多扇门一样，一台主机可以有多个网关。默认网关的意思是一台主机如果找不到可用的网关，就把数据包发给默认指定的网关，由这个网关来处理数据包。现在主机使用的网关，一般指的是默认网关。</p>
<p>如何设置默认网关　一台电脑的默认网关是不可以随随便便指定的，必须正确地指定，否则一台电脑就会将数据包发给不是网关的电脑，从而无法与其他网络的电脑通信。默认网关的设定有手动设置和自动设置两种方式。</p>
<p><strong>1. 手动设置</strong>：手动设置适用于电脑数量比较少、TCP&#x2F;IP参数基本不变的情况，比如只有几台到十几台电脑。因为这种方法需要在联入网络的每台电脑上设置“默认网关”，非常费劲，一旦因为迁移等原因导致必须修改默认网关的IP地址，就会给网管带来很大的麻烦，所以不推荐使用。在Windows 9x中，设置默认网关的方法是在“网上邻居”上右击，在弹出的菜单中点击“属性”，在网络属性对话框中选择“TCP&#x2F;IP协议”，点击“属性”，在“默认网关”选项卡中填写新的默认网关的IP地址就可以了。需要特别注意的是：默认网关必须是电脑自己所在的网段中的IP地址，而不能填写其他网段中的IP地址。</p>
<p><strong>2. 自动设置</strong>：自动设置就是利用DHCP服务器来自动给网络中的电脑分配IP地址、子网掩码和默认网关。这样做的好处是一旦网络的默认网关发生了变化时，只要更改了DHCP服务器中默认网关的设置，那么网络中所有的电脑均获得了新的默认网关的IP地址。这种方法适用于网络规模较大、TCP&#x2F;IP参数有可能变动的网络。另外一种自动获得网关的办法是通过安装代理服务器软件（如MS Proxy）的客户端程序来自动获得，其原理和方法和DHCP有相似之处。由于篇幅所限，就不再详述了。</p>
<p>通过简单的实验深入透析子网掩码，网关与ARP协议的作用子网掩码，网关与ARP协议的概念和工作原理是学习网络知识的初学者首先遇到的几个重要的知识点，其中子网掩码与ARP协议的作用和基本工作原理更是思科网络技术学院教程Semester 1中的重点与难点，初学者往往难以一下子掌握这些抽象复杂的机理。因此很有必要通过实验来帮助学员更加深入直观地了解子网掩码，网关与ARP协议的基本概念与工作原理。在对实验进行讲解之前，首先对子网掩码，网关与ARP协议的基本知识进行概述子网掩码子网掩码的主要功能是告知网络设备，一个特定的IP地址的哪一部分是包含网络地址与子网地址，哪一部分是主机地址。网络的路由设备只要识别出目的地址的网络号与子网号即可作出路由寻址决策，IP地址的主机部分不参与路由器的路由寻址操作，只用于在网段中唯一标识一个网络设备的接口。本来，如果网络系统中只使用A、B、C这三种主类地址，而不对这三种主类地址作子网划分或者进行主类地址的汇总，则网络设备根据IP地址的第一个字节的数值范围即可判断它属于A、B、C中的哪一个主类网，进而可确定该IP地址的网络部分和主机部分，不需要子网掩码的辅助。</p>
<p>但为了使系统在对A、B、C这三种主类网进行了子网的划分，或者采用无类别的域间选路技术（Classless Inte r-Domain Routing，CIDR）对网段进行汇总的情况下，也能对IP地址的网络及子网部分与主机部分作正确的区分，就必须依赖于子网掩码的帮助。</p>
<p>子网掩码使用与IP相同的编址格式，子网掩码为1的部分对应于IP地址的网络与子网部分，子网掩码为0的部分对应于IP地址的主机部分。将子网掩码和IP地址作”与”操作后，IP地址的主机部分将被丢弃，剩余的是网络地址和子网地址。例如，一个IP分组的目的IP地址为：10.2.2.1，若子网掩码为：255.255.255.0，与之作”与”运算得：10.2.2.0，则网络设备认为该IP地址的网络号与子网号为：10.2.2.0。</p>
<p>&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</p>
<p>IP地址英文IP address是分配给主机的32位地址,它标识了在网络上的一个节点,并且指定了在一个互连网络上的路由信息.</p>
<p>INTERNET上的每台主机(HOST)都有一个唯一的IP地址.</p>
<p>但我们这些拨号上见用户,或ISDN用户,网络接入商为节约资源,一般采用动态IP,即是说:你每次拨号上网ISP就分配一个IP给你.</p>
<p>IP,通俗,不规范的说:它相当于你家的电话号码,或是你家的地址.所以除特殊情况外,不要随便告诉你的IP给别人知道.</p>
<p>(可想知道现在网上什么人都有.IP炸弹乱飞.一不小心你就PK啦!说不好你的机有安全漏洞,别人黑啦你.)</p>
<p><strong>IP协议</strong>就是使用这个地址的主机之间传递信息,这是INTERNET能够运行的基础.</p>
<p>IP地址的长度为32位,分为4段,每段8位,用十进制数字表示,每段数字范围为1~254,段与段之间用点隔开.例如:202.103.44.194.</p>
<p>IP地址有两部分组成,一部分为网络地址,另一部分为主机地址.IP地址分为A,B,C,D,E5类.常用的是B和C两类.</p>
<p><strong>A类：</strong></p>
<p>A类IP地址的第一段数字范围为1~127，第个A类地址可连接16387064台主机，INTERNET上有126个A类地址</p>
<p><strong>B类：</strong></p>
<p>第一段数字范围为128~191，每个B类地址可连接64516台主机，INTERNET上有16256个B类地址。</p>
<p><strong>C类：</strong></p>
<p>192~133，可接254台主机，有2054512个</p>
<p><strong>D类：</strong></p>
<p>224~239，D类地址用作多目的的地信息的传输，作备用</p>
<p><strong>E类：</strong></p>
<p>240~254。E类地址保留，仅作为INTERNET的实验和开发之用。</p>
<p>仅仅靠WINDOWS不能打开网页。如果想办到，必须用IIS等软件辅助。</p>
<h4 id="什么是-dns"><span id="什么是-dns">什么是 DNS</span></h4><p>DNS 全名叫 Domain Name Server，中文俗称“<strong>域名服务器</strong>”，在说明 DNS Server 之前，可能要先说明什么叫 Domain Name(<strong>域名</strong>)。正如上面所讲，在网上辨别一台电脑的方法是利用 IP地址，但是 IP用数字表示，没有特殊的意义，很不好记，因此，我们一般会为网上的电脑取一个有某种含义又容易记忆的名字，这个名字我们就叫它“Domain Name”。 例如：对著名的YAHOO！搜索引擎来说，一般使用者在浏览这个网站时，都会输入[url]<a href="http://www.yahoo.com[/url]，很少有人会记住这台Server的">http://www.yahoo.com[/url]，很少有人会记住这台Server的</a> IP 是多少？所以[url]<a href="http://www.yahoo.com[/url]就是YAHOO!站点的">http://www.yahoo.com[/url]就是YAHOO!站点的</a> Domain Name。这正如我们在跟朋友打招呼时，一定是叫他的名字，几乎没有人是叫对方身份证号码的吧！但是由于在 Internet 上真实</p>
<p>辨认机器的还是IP，所以当使用者在浏览器中输入Domain Name 后，浏览器必须先到一台有 Domain Name 和 IP 对应信息的主机去查询这台电脑的 IP，而这台被查询的主机，我们称它为 Domain Name Server，简称 DNS，例如：当你输入[url]<a href="http://www.yahoo.com[/url]时，浏览器会将[url]http://www.yahoo.com[/url]这个名字传送到离它最近的">http://www.yahoo.com[/url]时，浏览器会将[url]http://www.yahoo.com[/url]这个名字传送到离它最近的</a> DNS Server 去做辨认，如果查询到结果，则会传回这台主机的 IP地址，进而跟它发生连接，但如果没有查询到，就会出现类似 DNS NOT FOUND 等告警信息。所以一旦你的电脑的DNS Server 设置不正确，就好比是路标错了，电脑也就不知道该把信息送到哪里。</p>
<p>由于ISP的拨号服务器一般都有缺省的DNS，所以你可以不用设置DNS，如果你需要指定一台DNS，你一定要了解这台DNS的准确IP（比如福州的163用户的DNS为202.101.98.55）。DNS设置方法如下：在“控制面板”下打开“网络”里的“TCP&#x2F;IP”的“属性”，在“DNS设置”栏目选择“启用DNS”，并将DNS的IP地址添加即可。</p>
<p>作者：ALEXIRC<br>链接：<a href="https://www.jianshu.com/p/b9806fe2376e">https://www.jianshu.com/p/b9806fe2376e</a><br>来源：简书<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>
]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
  </entry>
  <entry>
    <title>故事的开始</title>
    <url>/2022/03/10/%E5%8D%9A%E5%AE%A2%E4%BB%8B%E7%BB%8D/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="介绍"><span id="介绍">介绍</span></h1><blockquote>
<p>​        本博客采用的是Hexo技术+Ayer主题，这是该主题作者的gitee<a href="https://github.com/Shen-Yu/hexo-theme-ayer">主题作者</a>。我将会在此博客分享我的学习和生活的经历，欢迎大家来访。写博客无疑需要大量知识的沉淀，如果不具备相关领域的丰富知识，很难写出真正有干货的文章，所以，写博客我说一个逼着自己去深入了解领域知识的好方法。只有把一个东西成体系的表达出来，才算是真正的融会贯通。每一篇博客，都可以加深对技术进一步的理解，这就是存在的意义。</p>
<p>​                                                                                                                                                                    </p>
</blockquote>
<p><img src="https://s2.loli.net/2022/03/10/LRnsXqUribmxe6O.jpg" alt="写博客的意义"></p>
<span id="more"></span>

<h2 id="写作是让思考体系化的有效方式"><span id="写作是让思考体系化的有效方式"><strong>写作是让思考体系化的有效方式</strong></span></h2><p>书面表达与口头表达最大的差异，是口头表达只需要告诉对方发生了什么，而书面表达需要把一个事情全面而透彻的讲清楚，前者如何把想法传进对方的心底更重要，后者如何建立一个坚实的<a href="https://www.zhihu.com/search?q=%E6%80%9D%E7%BB%B4%E6%A1%86%E6%9E%B6&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:867707748%7D">思维框架</a>更重要。且不说历史上不可尽数的牛人都是写作的大师，写文章与写代码本来就十分相似，优秀的作家与优秀的程序员一样都是体系的架构者。然而大部分初级的技术人没有机会去做一个足够大的系统，大部分时间是在处理点状的问题，这时写作就等于创造了一个能够升维思考的契机，让你可以把点连成线汇成面。举个例子，当你需要给刚做过的某个项目写一份总结文档，为了避免受众一脸懵逼，你不得不去想：</p>
<ul>
<li>我做这个项目是为了解决什么问题？</li>
<li>在整个系统之中我的项目起到了什么作用？</li>
<li>业界其他领先团队在面对这个问题时会采用什么方案？</li>
<li>我的方案与他们对比有什么优势？</li>
<li>未来有哪些潜在的可迭代优化的方向？</li>
</ul>
<p>而当你把这些问题都想明白写透彻，就等于干了比你高一到两个技术级别的同事的活，自然比原来只精通那一亩三分地的细节要强得多。<strong>写作，首先是一条成长之道</strong>。</p>
<h2 id="写作是驱动学习的有效方式"><span id="写作是驱动学习的有效方式"><strong>写作是驱动学习的有效方式</strong></span></h2><p>写作无疑是需要大量知识沉淀的，如果不具备相关领域的丰富知识，很难写出真正有干货的文章。所以，写作是一个逼着自己去深入了解领域知识的好办法，普遍意义的学习仅仅只是获取信息而已，没有经过实践或其他方式的转化，知识不过是暂存在你大脑的某个内存空间，是一个没有被充分训练的特征值，而写作就是性价比最高的知识转化方式。举个我自己的例子，刚毕业时因为工作中要使用一种算法，必须在短时间内精通这种算法的每一个细节，于是遍览了所有经搜索引擎可找到的优质资料，后来觉得单凭阅读的学习效率太低了，索性开了个专栏连着写了三篇文章介绍自己对该种算法的理解，三年之后回头看竟然在谷歌的索引排序都不低。学习的方式有许多种，靠阅读是一种，靠实践是一种，靠交流是一种，但都不如靠写作来得有效，因为只有能把一个东西成体系的表达出来，才真的算融会贯通。<strong>写作，其次是一条学习之道</strong>。</p>
<h2 id="写作是扩大沟通范围的有效方式"><span id="写作是扩大沟通范围的有效方式"><strong>写作是扩大沟通范围的有效方式</strong></span></h2><p>除了上台演讲，大部分场景技术人的沟通范围是有限的，而写作等于创造了一个与理论上人数没有上限的受众沟通的机会，你有机会让更多人了解你的思想、框架、技能与方法。而除开写作之外的其他方式，几乎都很难如此系统的表达自我。麦肯锡有一条著名的<a href="https://www.zhihu.com/search?q=30%E7%A7%92%E7%94%B5%E6%A2%AF%E7%90%86%E8%AE%BA&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:867707748%7D">30秒电梯理论</a>，意为如果不能在电梯从1层到30层的运行过程中把事情表述清楚，对方将不会再有兴趣与你就此事交流，虽然这是一个典型的商业场景，却也体现了口头表达的困境，口头表达必须集中火力讲一两个点、必须投对方所好创造共同话题、必须有趣精彩引人入胜，而写作却不必如此，哪怕是一篇枯燥乏味的技术文档，也大可郑重其事的当做在创造一个我的世界。有这么一类技术人，他们在现实生活中木讷寡言，开个玩笑都会老脸一红，写起东西来却洋洋洒洒眼界宏大光彩照人，丝毫不影响圈粉无数。<strong>写作，最后是一条沟通之道</strong>。</p>
<p>写到这儿估计有小伙伴要举手了：我也知道写作有诸多好处，然而一来工作忙成狗，二来无从下笔，怎么破？</p>
<p>万事开头难，然后中间难结尾难。上中学时就为了作文凑够800字生不如死，现在猝不及防都要*<a href="https://www.zhihu.com/search?q=996.icu&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:867707748%7D">996.icu</a>*了，晚上下班还得挑灯夜战写东西，这简直要老命了。而且写什么更是想破了脑袋，写点技术怕写出来贻笑大方，写点生活更怕平淡如水写成碎碎念，该写什么？我太「南」了。</p>
<p>别怕，都是这么过来的。送上三个锦囊，给即将开始写作的技术人。</p>
<h2 id="从你熟悉的领域开始或者多写技术或工作文档"><span id="从你熟悉的领域开始或者多写技术或工作文档"><strong>从你熟悉的领域开始，或者多写技术或工作文档</strong></span></h2><p>我们生活在一个差异性越来越重要的世界。哪怕一个等级超高的技术天才，也难以成为全部领域的专才。反过来想，哪怕是遇到一个阿里P9以上的大牛，总有一些你懂他不懂的东西，也许是一个小众的配置文件系统，也许是一种冷门到被人遗忘的算法，也许是搞定某个业务专项的trick。当你开始分享时，不妨从这些你所熟悉的领域开始，因为你就是这个领域无可争议的王者段位选手，能有充分的自信把文章写「顺」，继而找到文字表达这项技艺的感觉。自信与感觉，对刚开始写作的技术人而言至关重要。</p>
<p>假如你现在扫描了一遍自己的大脑，然而没有发现上面所说的特别擅长的领域，那么我会建议你由<a href="https://www.zhihu.com/search?q=%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:867707748%7D">技术文档</a>或者工作文档开始。文档就像造火箭盖楼房的设计草图，重要性不言而喻，但我接触的许多程序员恰恰是很排斥写文档的，宁愿写多几行代码。其实文档是一个帮助你从作者思维升级到读者思维的好工具，因为文档是写给小白看的，怎么让一个小白顺着你的文档跑起来，哪些步骤要走起来，哪些细节需要重点标识，其实就是一项琢磨受众需要什么的练习。</p>
<h2 id="从小范围的分享开始像写代码一样的最佳实践"><span id="从小范围的分享开始像写代码一样的最佳实践"><strong>从小范围的分享开始，像写代码一样的最佳实践</strong></span></h2><p>放心，怕写不好是所有的人刚起步时的共同担心。所以我们可以从身边的同事开始，比如做一个小组级别的文档分享，然后慢慢到部门内、公司内的文档分享，等自己更有把握了，再扩大到不熟悉的受众。循序渐进有助于培养写作的自信，也更便于收集身边人的反馈，通过小范围的试错迭代内容。一旦验证文章能对读者产生帮助，就可以进一步扩大传播，无论公众号、知乎还是技术博客都是一个适合优质内容沉淀和传播的选项（<em>当然，文章不可包含不宜公开的内容</em>）。</p>
<p>写作和编程的最佳实践是极其相似的，首先在纸上列一个简要的提纲，想明白自己期望表达的重点内容，其次开始写初稿，这个初稿遵循的原则是先完成再完美，把想表达的内容顺畅传递出来就好了，最后不可少的是花一点时间重构：也许是调整段落之间的顺序，也许是为某个不够接地气的部分增加case，也许是修改表达的措辞细节，与软件的重构相似，文章的重构消除了「坏味道」，提高了文章的可读性。</p>
<h2 id="定时定量写作排除社交杂音的干扰"><span id="定时定量写作排除社交杂音的干扰"><strong>定时定量写作，排除社交杂音的干扰</strong></span></h2><p>我有一个习惯，是用苹果的日历记录自己过往的时间耗费，反正花在「工作」类目上的时间是绝对超过<code>12 * 6</code>的，但如果每天回到家还没觉得筋疲力尽，就会继续掏出笔记本写点东西。得益于文档同步工具，我也会不定期在上下班通勤的过程中利用手机接着写（<em>移动端写作的速度并不见得慢</em>）。然而，我建议所有刚开始写作的技术人，先给自己制定一个写作的计划，再给自己制定一个写作的<code>KPI</code>，比如工作日每天写200字、节假日每天写500字之类的，由易到难，如果害怕坚持不住的，可以定一个<code>写作时间</code>，和写代码一样写作也是需要沉浸的，把手机调到<code>勿扰模式</code>并反扣在桌面，关闭一切社交客户端与网页，全身心投入其中。只要平衡得好，写作并不为繁重的业务所累，反而会对工作有正向的推动，因为提升了思考与总结的能力。作家冯唐就是在一路晋升麦肯锡合伙人的几年间，在每周80小时+的工作时长之外，完成了6本小说、2本杂文集的出版。</p>
<p>大学时有幸成为一个知名企业家的弟子，曾有一次面谈，聊到他对年轻人的要求，总结为六个字：<strong>能做、会说、善写</strong>。我想对技术人也是如此，期待这篇小文章激发到一些人的写作潜力，为技术圈创造更多的知识沉淀。</p>
]]></content>
  </entry>
  <entry>
    <title>端口被莫名进程占用怎么办？</title>
    <url>/2022/03/11/%E7%AB%AF%E5%8F%A3%E8%A2%AB%E5%8D%A0%E7%94%A8%E6%80%8E%E4%B9%88%E5%8A%9E%EF%BC%9F/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>在写TCP&#x2F;UDP网络编程时，遇到如下异常,端口被莫名的进程给占用了</p>
<p><img src="https://s2.loli.net/2022/03/11/ONcXUQrABFJdhKv.png"></p>
<p>很明显由于程序异常关闭导致的端口被异常关闭的僵尸程序所占用</p>
<p>解决方案<br>在命令行中通过，其中10000是被占用的端口，netstart查看端口的情况</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">netstat -ano|findstr 10000</span><br></pre></td></tr></table></figure>

<p><img src="https://s2.loli.net/2022/03/11/mZFvdxX2b7fHMol.png" alt="image-20220311153357262"></p>
<p>查询到被占用端口号（10000）的进程</p>
<p>netstat常见参数</p>
<ul>
<li>-a (all) 显示所有选项，默认不显示LISTEN相关。</li>
</ul>
<p>-t (tcp) 仅显示tcp相关选项。<br>-u (udp) 仅显示udp相关选项。<br>-n 拒绝显示别名，能显示数字的全部转化成数字。<br>-l 仅列出有在 Listen (监听) 的服务状态。</p>
<p>根据进程号（pid），输入以下命令，强制杀死占用该端口号的僵尸程序</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">taskkill /pid 26484 /F</span><br></pre></td></tr></table></figure>

<p><img src="https://s2.loli.net/2022/03/11/YdKcNq7E2y5OClj.png" alt="image-20220311153433476"></p>
<p>经过此过程、程序可以正常启动</p>
]]></content>
  </entry>
  <entry>
    <title>categories</title>
    <url>/categories/index.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script>]]></content>
  </entry>
  <entry>
    <title>friends</title>
    <url>/friends/index.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script>]]></content>
  </entry>
  <entry>
    <title>影音播放</title>
    <url>/player/index.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="aplayer演示"><span id="aplayer演示">aplayer演示：</span></h3>
    <div id="aplayer-yQTSlaow" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="2121130123" data-server="netease" data-type="playlist" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#555"></div>

<br>



<br>

<h3 id="bilibili"><span id="bilibili">bilibili：</span></h3><iframe src="//player.bilibili.com/player.html?aid=75285353&bvid=BV16E411Y74Q&cid=128777597&page=1" style="width:100%;height:500px;min-width:375px;min-height:200px" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>

<br>

<h3 id="acfun"><span id="acfun">acfun：</span></h3><iframe src="https://www.acfun.cn/player/ac12945786" style="width:100%;height:500px;min-width:375px;min-height:200px" id="ACPlayer-re" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"></iframe>]]></content>
  </entry>
  <entry>
    <title>Gallery</title>
    <url>/photos/index.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script>]]></content>
  </entry>
  <entry>
    <title>tags</title>
    <url>/tags/index.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script>]]></content>
  </entry>
</search>
